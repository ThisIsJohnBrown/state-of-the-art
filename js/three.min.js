// threejs.org/license
'use strict';var THREE={REVISION:"69"};"object"===typeof module&&(module.exports=THREE);void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:0});THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;
THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;
THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;
THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;
THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;
THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*
c:.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a};b=.5>=c?c*(1+b):c+b-c*b;c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<
8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),h,k=(f+e)/2;if(f===e)f=h=0;else{var m=e-f,f=.5>=k?m/(e+f):m/(2-e-f);switch(e){case b:h=(c-d)/m+(c<d?6:0);break;case c:h=(d-b)/m+2;break;case d:h=(b-c)/m+4}h/=6}a.h=h;a.s=f;a.l=k;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,
b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;
this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;
this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),h=Math.sin(a._y/2),k=Math.sin(a._z/2);"XYZ"===a.order?(this._x=f*d*e+c*h*k,this._y=c*h*e-f*d*k,this._z=c*d*k+f*h*e,this._w=c*d*e-f*h*k):"YXZ"===a.order?(this._x=f*d*e+c*h*k,this._y=c*h*e-f*d*k,this._z=
c*d*k-f*h*e,this._w=c*d*e+f*h*k):"ZXY"===a.order?(this._x=f*d*e-c*h*k,this._y=c*h*e+f*d*k,this._z=c*d*k+f*h*e,this._w=c*d*e-f*h*k):"ZYX"===a.order?(this._x=f*d*e-c*h*k,this._y=c*h*e+f*d*k,this._z=c*d*k-f*h*e,this._w=c*d*e+f*h*k):"YZX"===a.order?(this._x=f*d*e+c*h*k,this._y=c*h*e+f*d*k,this._z=c*d*k-f*h*e,this._w=c*d*e-f*h*k):"XZY"===a.order&&(this._x=f*d*e-c*h*k,this._y=c*h*e-f*d*k,this._z=c*d*k+f*h*e,this._w=c*d*e+f*h*k);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,
b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],h=b[9],k=b[2],m=b[6],b=b[10],n=c+f+b;0<n?(c=.5/Math.sqrt(n+1),this._w=.25/c,this._x=(m-h)*c,this._y=(d-k)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(m-h)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+k)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-k)/c,this._x=(a+e)/c,this._y=
.25*c,this._z=(h+m)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+k)/c,this._y=(h+m)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=
-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},
multiply:function(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,h=b._x,k=b._y,m=b._z,n=b._w;this._x=c*n+f*h+d*m-e*k;this._y=d*n+f*k+e*h-c*m;this._z=e*n+f*m+c*k-d*h;this._w=f*n-c*h-d*k-e*m;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,h=f*a._w+c*a._x+d*a._y+e*a._z;0>h?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,h=-h):this.copy(a);if(1<=h)return this._w=f,this._x=c,this._y=d,this._z=e,this;var k=Math.acos(h),m=Math.sqrt(1-h*h);if(.001>Math.abs(m))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;h=Math.sin((1-b)*k)/m;k=
Math.sin(b*k)/m;this._w=f*h+this._w*k;this._x=c*h+this._x*k;this._y=d*h+this._y*k;this._z=e*h+this._z*k;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=
a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},
subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,
b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},
roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=
this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},clone:function(){return new THREE.Vector2(this.x,this.y)}};
THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=
a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),applyMatrix3:function(a){var b=this.x,
c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=
(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,h=a.z;a=a.w;var k=a*b+f*d-h*c,m=a*c+h*b-e*d,n=a*d+e*c-f*b,b=-e*b-f*c-h*d;this.x=k*a+b*-e+m*-h-n*-f;this.y=m*a+b*-f+n*-e-k*-h;this.z=n*a+b*-h+k*-f-m*-e;return this},project:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function(b){void 0===
a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>
a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,
b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);
return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/
b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,h=b.y,k=b.z;this.x=d*k-e*h;this.y=e*f-c*k;this.z=c*h-d*f;return this},
projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());
return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(a,b){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},
getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(a,
b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===
this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=
this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},
setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],h=a[1],k=a[5],m=a[9];c=a[2];b=a[6];var n=a[10];if(.01>Math.abs(d-h)&&.01>Math.abs(f-c)&&.01>Math.abs(m-b)){if(.1>Math.abs(d+h)&&.1>Math.abs(f+c)&&.1>Math.abs(m+b)&&.1>Math.abs(e+k+n-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;k=(k+1)/2;n=(n+1)/2;d=(d+h)/4;f=(f+c)/4;m=(m+b)/4;e>k&&e>n?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):k>n?.01>k?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(k),
b=d/c,d=m/c):.01>n?(c=b=.707106781,d=0):(d=Math.sqrt(n),b=f/d,c=m/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-m)*(b-m)+(f-c)*(f-c)+(h-d)*(h-d));.001>Math.abs(a)&&(a=1);this.x=(b-m)/a;this.y=(f-c)/a;this.z=(h-d)/a;this.w=Math.acos((e+k+n-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);
return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);
return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);
return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=
this.z;a[b+3]=this.w;return a},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},copy:function(a){this._x=
a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b){var c=THREE.Math.clamp,d=a.elements,e=d[0],f=d[4],h=d[8],k=d[1],m=d[5],n=d[9],q=d[2],p=d[6],d=d[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(c(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-n,d),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(p,m),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(n,-1,1)),.99999>Math.abs(n)?(this._y=Math.atan2(h,d),this._z=Math.atan2(k,m)):(this._y=
Math.atan2(-q,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(p,-1,1)),.99999>Math.abs(p)?(this._y=Math.atan2(-q,d),this._z=Math.atan2(-f,m)):(this._y=0,this._z=Math.atan2(k,e))):"ZYX"===b?(this._y=Math.asin(-c(q,-1,1)),.99999>Math.abs(q)?(this._x=Math.atan2(p,d),this._z=Math.atan2(k,e)):(this._x=0,this._z=Math.atan2(-f,m))):"YZX"===b?(this._z=Math.asin(c(k,-1,1)),.99999>Math.abs(k)?(this._x=Math.atan2(-n,m),this._y=Math.atan2(-q,e)):(this._x=0,this._y=Math.atan2(h,d))):"XZY"===b?(this._z=Math.asin(-c(f,
-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(p,m),this._y=Math.atan2(h,e)):(this._x=Math.atan2(-n,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;this.onChangeCallback();return this},setFromQuaternion:function(a,b,c){var d=THREE.Math.clamp,e=a.x*a.x,f=a.y*a.y,h=a.z*a.z,k=a.w*a.w;b=b||this._order;"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),k-e-f+h),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w),-1,1)),this._z=Math.atan2(2*(a.z*a.w-a.x*
a.y),k+e-f-h)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),k-e-f+h),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),k-e+f-h)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),k-e-f+h),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),k-e+f-h)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),k-e-f+h),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z),-1,1)),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),k+e-f-h)):"YZX"===b?(this._x=Math.atan2(2*
(a.x*a.w-a.z*a.y),k-e+f-h),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),k+e-f-h),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w),-1,1))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),k-e+f-h),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),k+e-f-h),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);
this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};
THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=
this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);
this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>
this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&
a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);
this.makeEmpty();b.traverse(function(b){var e=b.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var f=e.vertices,e=0,h=f.length;e<h;e++)a.copy(f[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(e instanceof THREE.BufferGeometry&&void 0!==e.attributes.position)for(f=e.attributes.position.array,e=0,h=f.length;e<h;e+=3)a.set(f[e],f[e+1],f[e+2]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},
makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);
this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-
this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=
new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,
this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);
this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,h,k,m){var n=this.elements;n[0]=a;n[3]=b;n[6]=c;n[1]=d;n[4]=e;n[7]=f;n[2]=h;n[5]=k;n[8]=m;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(a){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=
a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],h=a[5],k=a[6],m=a[7],a=a[8];return b*f*a-b*h*m-c*e*a+c*h*k+d*e*m-d*f*k},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];
c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];
a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}};
THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,h,k,m,n,q,p,l,w,s,t){var v=this.elements;v[0]=a;v[4]=b;v[8]=c;v[12]=d;v[1]=e;v[5]=f;v[9]=h;v[13]=k;v[2]=m;v[6]=n;v[10]=q;v[14]=p;v[3]=l;v[7]=w;v[11]=s;v[15]=t;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(a)},
copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements;b=b.elements;var d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&
console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),h=Math.cos(d),d=Math.sin(d),k=Math.cos(e),e=Math.sin(e);if("XYZ"===a.order){a=f*k;var m=f*e,n=c*k,q=c*e;b[0]=h*k;b[4]=-h*e;b[8]=d;b[1]=m+n*d;b[5]=a-q*d;b[9]=-c*h;b[2]=q-a*d;b[6]=n+m*d;b[10]=f*h}else"YXZ"===a.order?(a=h*k,m=h*e,n=d*k,q=d*e,b[0]=a+q*c,b[4]=n*c-m,b[8]=f*d,b[1]=f*e,b[5]=f*k,b[9]=-c,b[2]=m*c-n,b[6]=q+a*c,
b[10]=f*h):"ZXY"===a.order?(a=h*k,m=h*e,n=d*k,q=d*e,b[0]=a-q*c,b[4]=-f*e,b[8]=n+m*c,b[1]=m+n*c,b[5]=f*k,b[9]=q-a*c,b[2]=-f*d,b[6]=c,b[10]=f*h):"ZYX"===a.order?(a=f*k,m=f*e,n=c*k,q=c*e,b[0]=h*k,b[4]=n*d-m,b[8]=a*d+q,b[1]=h*e,b[5]=q*d+a,b[9]=m*d-n,b[2]=-d,b[6]=c*h,b[10]=f*h):"YZX"===a.order?(a=f*h,m=f*d,n=c*h,q=c*d,b[0]=h*k,b[4]=q-a*e,b[8]=n*e+m,b[1]=e,b[5]=f*k,b[9]=-c*k,b[2]=-d*k,b[6]=m*e+n,b[10]=a-q*e):"XZY"===a.order&&(a=f*h,m=f*d,n=c*h,q=c*d,b[0]=h*k,b[4]=-e,b[8]=d*k,b[1]=a*e+q,b[5]=f*k,b[9]=m*
e-n,b[2]=n*e-m,b[6]=c*k,b[10]=q*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,h=c+c,k=d+d,m=e+e;a=c*h;var n=c*k,c=c*m,q=d*k,d=d*m,e=e*m,h=f*h,k=f*k,f=f*m;b[0]=1-(q+e);b[4]=n-f;b[8]=c+k;b[1]=n+f;b[5]=1-
(a+e);b[9]=d-h;b[2]=c-k;b[6]=d+h;b[10]=1-(a+q);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var h=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);h[0]=a.x;h[4]=b.x;h[8]=c.x;h[1]=a.y;h[5]=b.y;h[9]=c.y;h[2]=a.z;h[6]=b.z;h[10]=c.z;return this}}(),
multiply:function(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],h=c[4],k=c[8],m=c[12],n=c[1],q=c[5],p=c[9],l=c[13],w=c[2],s=c[6],t=c[10],v=c[14],z=c[3],L=c[7],R=c[11],c=c[15],r=d[0],W=d[4],u=d[8],M=d[12],I=d[1],E=d[5],B=d[9],D=d[13],C=d[2],H=d[6],K=d[10],O=d[14],T=d[3],
S=d[7],na=d[11],d=d[15];e[0]=f*r+h*I+k*C+m*T;e[4]=f*W+h*E+k*H+m*S;e[8]=f*u+h*B+k*K+m*na;e[12]=f*M+h*D+k*O+m*d;e[1]=n*r+q*I+p*C+l*T;e[5]=n*W+q*E+p*H+l*S;e[9]=n*u+q*B+p*K+l*na;e[13]=n*M+q*D+p*O+l*d;e[2]=w*r+s*I+t*C+v*T;e[6]=w*W+s*E+t*H+v*S;e[10]=w*u+s*B+t*K+v*na;e[14]=w*M+s*D+t*O+v*d;e[3]=z*r+L*I+R*C+c*T;e[7]=z*W+L*E+R*H+c*S;e[11]=z*u+L*B+R*K+c*na;e[15]=z*M+L*D+R*O+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];
c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=
b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix4(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=
a[0],c=a[4],d=a[8],e=a[12],f=a[1],h=a[5],k=a[9],m=a[13],n=a[2],q=a[6],p=a[10],l=a[14];return a[3]*(+e*k*q-d*m*q-e*h*p+c*m*p+d*h*l-c*k*l)+a[7]*(+b*k*l-b*m*p+e*f*p-d*f*l+d*m*n-e*k*n)+a[11]*(+b*m*q-b*h*l-e*f*q+c*f*l+e*h*n-c*m*n)+a[15]*(-d*h*n-b*k*q+b*h*p+d*f*q-c*f*p+c*k*n)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,
b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=
this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],h=d[8],k=d[12],m=d[1],n=d[5],q=d[9],p=d[13],l=d[2],w=d[6],s=d[10],t=d[14],v=d[3],z=d[7],L=d[11],d=d[15];c[0]=q*t*z-p*s*z+p*w*L-n*t*L-q*w*d+n*s*d;c[4]=k*s*z-h*t*z-k*w*L+f*t*L+h*w*d-f*s*d;c[8]=h*p*z-k*q*z+k*n*L-f*p*L-h*n*d+f*q*d;c[12]=k*q*w-h*p*w-k*n*s+f*p*s+h*n*t-f*q*t;c[1]=p*s*v-q*t*v-p*l*L+m*t*L+q*l*d-m*s*d;c[5]=h*t*v-k*s*v+k*l*L-e*t*L-h*l*d+e*s*d;c[9]=k*q*v-h*p*v-k*m*
L+e*p*L+h*m*d-e*q*d;c[13]=h*p*l-k*q*l+k*m*s-e*p*s-h*m*t+e*q*t;c[2]=n*t*v-p*w*v+p*l*z-m*t*z-n*l*d+m*w*d;c[6]=k*w*v-f*t*v-k*l*z+e*t*z+f*l*d-e*w*d;c[10]=f*p*v-k*n*v+k*m*z-e*p*z-f*m*d+e*n*d;c[14]=k*n*l-f*p*l-k*m*w+e*p*w+f*m*t-e*n*t;c[3]=q*w*v-n*s*v-q*l*z+m*s*z+n*l*L-m*w*L;c[7]=f*s*v-h*w*v+h*l*z-e*s*z-f*l*L+e*w*L;c[11]=h*n*v-f*q*v-h*m*z+e*q*z+f*m*L-e*n*L;c[15]=f*q*l-h*n*l+h*m*w-e*q*w-f*m*s+e*n*s;c=e*c[0]+m*c[4]+l*c[8]+v*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");
console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(a){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(a){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(a){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(a){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(a,b){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},
scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,
0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,h=a.y,k=a.z,m=e*f,n=e*h;this.set(m*f+c,m*h-d*k,m*k+d*h,0,m*h+d*k,n*h+c,n*k-d*f,0,m*k-d*h,n*k+d*f,e*k*k+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,
0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,h=a.set(f[0],f[1],f[2]).length(),k=a.set(f[4],f[5],f[6]).length(),m=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(h=-h);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/h;var f=1/k,n=1/m;b.elements[0]*=c;b.elements[1]*=
c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=n;b.elements[9]*=n;b.elements[10]*=n;d.setFromRotationMatrix(b);e.x=h;e.y=k;e.z=m;return this}}(),makeFrustum:function(a,b,c,d,e,f){var h=this.elements;h[0]=2*e/(b-a);h[4]=0;h[8]=(b+a)/(b-a);h[12]=0;h[1]=0;h[5]=2*e/(d-c);h[9]=(d+c)/(d-c);h[13]=0;h[2]=0;h[6]=0;h[10]=-(f+e)/(f-e);h[14]=-2*f*e/(f-e);h[3]=0;h[7]=0;h[11]=-1;h[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*a));
var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var h=this.elements,k=b-a,m=c-d,n=f-e;h[0]=2/k;h[4]=0;h[8]=0;h[12]=-((b+a)/k);h[1]=0;h[5]=2/m;h[9]=0;h[13]=-((c+d)/m);h[2]=0;h[6]=0;h[10]=-2/n;h[14]=-((f+e)/n);h[3]=0;h[7]=0;h[11]=0;h[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}};
THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);
var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(a,b,c,d){var e=a.clone().add(b).multiplyScalar(.5),f=b.clone().sub(a).normalize(),h=.5*a.distanceTo(b),k=
this.origin.clone().sub(e);a=-this.direction.dot(f);b=k.dot(this.direction);var m=-k.dot(f),n=k.lengthSq(),q=Math.abs(1-a*a),p,l;0<=q?(k=a*m-b,p=a*b-m,l=h*q,0<=k?p>=-l?p<=l?(h=1/q,k*=h,p*=h,a=k*(k+a*p+2*b)+p*(a*k+p+2*m)+n):(p=h,k=Math.max(0,-(a*p+b)),a=-k*k+p*(p+2*m)+n):(p=-h,k=Math.max(0,-(a*p+b)),a=-k*k+p*(p+2*m)+n):p<=-l?(k=Math.max(0,-(-a*h+b)),p=0<k?-h:Math.min(Math.max(-h,-m),h),a=-k*k+p*(p+2*m)+n):p<=l?(k=0,p=Math.min(Math.max(-h,-m),h),a=p*(p+2*m)+n):(k=Math.max(0,-(a*h+b)),p=0<k?h:Math.min(Math.max(-h,
-m),h),a=-k*k+p*(p+2*m)+n)):(p=0<a?-h:h,k=Math.max(0,-(a*p+b)),a=-k*k+p*(p+2*m)+n);c&&c.copy(this.direction.clone().multiplyScalar(k).add(this.origin));d&&d.copy(f.clone().multiplyScalar(p).add(e));return a},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=new THREE.Vector3;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e>f)return null;f=Math.sqrt(f-e);e=d-f;
d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;
return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,h;d=1/this.direction.x;f=1/this.direction.y;h=1/this.direction.z;var k=this.origin;0<=d?(c=(a.min.x-k.x)*d,d*=a.max.x-k.x):(c=(a.max.x-k.x)*d,d*=a.min.x-k.x);0<=f?(e=(a.min.y-k.y)*f,f*=a.max.y-k.y):(e=(a.max.y-k.y)*f,f*=a.min.y-k.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;0<=h?(e=(a.min.z-k.z)*h,h*=a.max.z-k.z):(e=(a.max.z-k.z)*h,h*=a.min.z-k.z);if(c>h||e>d)return null;if(e>c||c!==
c)c=e;if(h<d||d!==d)d=h;return 0>d?null:this.at(0<=c?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,h,k,m){b.subVectors(f,e);c.subVectors(h,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(k)return null;k=1}else if(0>f)k=-1,f=-f;else return null;a.subVectors(this.origin,e);e=k*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;h=k*this.direction.dot(b.cross(a));if(0>h||e+h>f)return null;
e=-k*a.dot(d);return 0>e?null:this.at(e/f,m)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,h=b.length;f<h;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=
this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};
THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var h=this.planes;h[0].copy(a);h[1].copy(b);h[2].copy(c);h[3].copy(d);h[4].copy(e);h[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],h=c[4],k=c[5],m=c[6],n=c[7],q=c[8],p=c[9],l=c[10],w=c[11],s=c[12],t=c[13],v=c[14],c=c[15];b[0].setComponents(f-a,n-h,w-q,c-s).normalize();b[1].setComponents(f+
a,n+h,w+q,c+s).normalize();b[2].setComponents(f+d,n+k,w+p,c+t).normalize();b[3].setComponents(f-d,n-k,w-p,c-t).normalize();b[4].setComponents(f-e,n-m,w-l,c-v).normalize();b[5].setComponents(f+e,n+m,w+l,c+v).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,
c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var h=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>h&&0>f)return!1}return!0}}(),
containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),h=this.coplanarPoint(b);h.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,h);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};
THREE.Math={generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?b[e]="-":14==e?b[e]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=
b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=
180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a}};
THREE.Spline=function(a){function b(a,b,c,d,e,h,f){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*f+(-3*(b-c)-2*a-d)*h+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,h,k,m,n,q,p,l;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);h=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+
2;n=this.points[c[0]];q=this.points[c[1]];p=this.points[c[2]];l=this.points[c[3]];k=h*h;m=h*k;d.x=b(n.x,q.x,p.x,l.x,h,k,m);d.y=b(n.y,q.y,p.y,l.y,h,k,m);d.z=b(n.z,q.z,p.z,l.z,h,k,m);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,h=new THREE.Vector3,f=new THREE.Vector3,k=[],l=0;k[0]=0;a||(a=100);c=this.points.length*a;h.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),f.copy(d),l+=f.distanceTo(h),h.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(k[b]=l,e=b);k[k.length]=l;return{chunks:k,total:l}};this.reparametrizeByArcLength=function(a){var b,c,d,e,h,f,k=[],l=new THREE.Vector3,m=this.getLength();k.push(l.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];f=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);h=b/(this.points.length-1);for(c=1;c<f-1;c++)d=e+1/f*c*(h-e),d=this.getPoint(d),k.push(l.copy(d).clone());
k.push(l.copy(this.points[b]).clone())}this.points=k}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,h,k){a.subVectors(h,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var m=b.dot(b);h=b.dot(c);var n=d*m-e*e;k=k||new THREE.Vector3;if(0==n)return k.set(-2,-1,-1);n=1/n;m=(m*f-e*h)*n;d=(d*h-e*f)*n;return k.set(1-m-d,d,m)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};
(function(a){a.Raycaster=function(b,c,f,h){this.ray=new a.Ray(b,c);this.near=f||0;this.far=h||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var b=function(a,b){return a.distance-b.distance},c=function(a,b,f,h){a.raycast(b,f);if(!0===h){a=a.children;h=0;for(var k=a.length;h<k;h++)c(a[h],b,f,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,precision:1E-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},intersectObject:function(a,e){var f=[];c(a,this,f,e);
f.sort(b);return f},intersectObjects:function(a,e){var f=[];if(!1===a instanceof Array)return console.log("THREE.Raycaster.intersectObjects: objects is not an Array."),f;for(var h=0,k=a.length;h<k;h++)c(a[h],this,f,e);f.sort(b);return f}}})(THREE);
THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=void 0;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,
value:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d}});this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);
THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");return this.rotation.order},set eulerOrder(a){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},
applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,
c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));
return this}}(),translate:function(a,b){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,
b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error("THREE.Object3D.add:",
a,"can't be added as a child of itself."),this;a instanceof THREE.Object3D?(void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a)):console.error("THREE.Object3D.add:",a,"is not an instance of THREE.Object3D.");return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=void 0,a.dispatchEvent({type:"removed"}),this.children.splice(b,1))},getChildByName:function(a,
b){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a,b)},getObjectById:function(a,b){if(this.id===a)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectById(a,b);if(void 0!==e)return e}},getObjectByName:function(a,b){if(this.name===a)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByName(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new THREE.Vector3;
this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;
return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=0,c=this.children.length;b<
c;b++)this.children[b].traverseVisible(a)}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},
toJSON:function(){var a={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},b={},c=function(c){void 0===a.geometries&&(a.geometries=[]);if(void 0===b[c.uuid]){var d=c.toJSON();delete d.metadata;b[c.uuid]=d;a.geometries.push(d)}return c.uuid},d={},e=function(b){void 0===a.materials&&(a.materials=[]);if(void 0===d[b.uuid]){var c=b.toJSON();delete c.metadata;d[b.uuid]=c;a.materials.push(c)}return b.uuid},f=function(a){var b={};b.uuid=a.uuid;b.type=a.type;""!==a.name&&(b.name=a.name);"{}"!==
JSON.stringify(a.userData)&&(b.userData=a.userData);!0!==a.visible&&(b.visible=a.visible);a instanceof THREE.PerspectiveCamera?(b.fov=a.fov,b.aspect=a.aspect,b.near=a.near,b.far=a.far):a instanceof THREE.OrthographicCamera?(b.left=a.left,b.right=a.right,b.top=a.top,b.bottom=a.bottom,b.near=a.near,b.far=a.far):a instanceof THREE.AmbientLight?b.color=a.color.getHex():a instanceof THREE.DirectionalLight?(b.color=a.color.getHex(),b.intensity=a.intensity):a instanceof THREE.PointLight?(b.color=a.color.getHex(),
b.intensity=a.intensity,b.distance=a.distance):a instanceof THREE.SpotLight?(b.color=a.color.getHex(),b.intensity=a.intensity,b.distance=a.distance,b.angle=a.angle,b.exponent=a.exponent):a instanceof THREE.HemisphereLight?(b.color=a.color.getHex(),b.groundColor=a.groundColor.getHex()):a instanceof THREE.Mesh?(b.geometry=c(a.geometry),b.material=e(a.material)):a instanceof THREE.Line?(b.geometry=c(a.geometry),b.material=e(a.material)):a instanceof THREE.Sprite&&(b.material=e(a.material));b.matrix=
a.matrix.toArray();if(0<a.children.length){b.children=[];for(var d=0;d<a.children.length;d++)b.children.push(f(a.children[d]))}return b};a.object=f(this);return a},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);
a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;
THREE.Projector=function(){console.warn("THREE.Projector has been moved to /examples/renderers/Projector.js.");this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project().");a.project(b)};this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");a.unproject(b)};this.pickingRay=function(a,b){console.error("THREE.Projector: .pickingRay() has been removed.")}};
THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.materialIndex=this.materialIndex;for(var b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}};
THREE.Face4=function(a,b,c,d,e,f,h){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(a,b,c,e,f,h)};THREE.BufferAttribute=function(a,b){this.array=a;this.itemSize=b;this.needsUpdate=!1};
THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d]},set:function(a){this.array.set(a);return this},setX:function(a,b){this.array[a*this.itemSize]=b;return this},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},setXY:function(a,b,c){a*=this.itemSize;
this.array[a]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}};
THREE.Int8Attribute=function(a,b){console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Uint8Attribute=function(a,b){console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint8ClampedAttribute=function(a,b){console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Int16Attribute=function(a,b){console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint16Attribute=function(a,b){console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Int32Attribute=function(a,b){console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Uint32Attribute=function(a,b){console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.Float32Attribute=function(a,b){console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};
THREE.Float64Attribute=function(a,b){console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(a,b)};THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.attributes={};this.attributesKeys=[];this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c){!1===b instanceof THREE.BufferAttribute?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[a]={array:b,itemSize:c}):(this.attributes[a]=b,this.attributesKeys=Object.keys(this.attributes))},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!==c?c:0})},applyMatrix:function(a){var b=
this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0)},center:function(){},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};var c=a.vertices,d=a.faces,e=a.faceVertexUvs,f=b.vertexColors,h=0<e[0].length,k=3==d[0].vertexNormals.length,m=new Float32Array(9*d.length);this.addAttribute("position",new THREE.BufferAttribute(m,3));var n=
new Float32Array(9*d.length);this.addAttribute("normal",new THREE.BufferAttribute(n,3));if(f!==THREE.NoColors){var q=new Float32Array(9*d.length);this.addAttribute("color",new THREE.BufferAttribute(q,3))}if(!0===h){var p=new Float32Array(6*d.length);this.addAttribute("uv",new THREE.BufferAttribute(p,2))}for(var l=0,w=0,s=0;l<d.length;l++,w+=6,s+=9){var t=d[l],v=c[t.a],z=c[t.b],L=c[t.c];m[s]=v.x;m[s+1]=v.y;m[s+2]=v.z;m[s+3]=z.x;m[s+4]=z.y;m[s+5]=z.z;m[s+6]=L.x;m[s+7]=L.y;m[s+8]=L.z;!0===k?(v=t.vertexNormals[0],
z=t.vertexNormals[1],L=t.vertexNormals[2],n[s]=v.x,n[s+1]=v.y,n[s+2]=v.z,n[s+3]=z.x,n[s+4]=z.y,n[s+5]=z.z,n[s+6]=L.x,n[s+7]=L.y,n[s+8]=L.z):(v=t.normal,n[s]=v.x,n[s+1]=v.y,n[s+2]=v.z,n[s+3]=v.x,n[s+4]=v.y,n[s+5]=v.z,n[s+6]=v.x,n[s+7]=v.y,n[s+8]=v.z);f===THREE.FaceColors?(t=t.color,q[s]=t.r,q[s+1]=t.g,q[s+2]=t.b,q[s+3]=t.r,q[s+4]=t.g,q[s+5]=t.b,q[s+6]=t.r,q[s+7]=t.g,q[s+8]=t.b):f===THREE.VertexColors&&(v=t.vertexColors[0],z=t.vertexColors[1],t=t.vertexColors[2],q[s]=v.r,q[s+1]=v.g,q[s+2]=v.b,q[s+3]=
z.r,q[s+4]=z.g,q[s+5]=z.b,q[s+6]=t.r,q[s+7]=t.g,q[s+8]=t.b);!0===h&&(t=e[0][l][0],v=e[0][l][1],z=e[0][l][2],p[w]=t.x,p[w+1]=t.y,p[w+2]=v.x,p[w+3]=v.y,p[w+4]=z.x,p[w+5]=z.y)}this.computeBoundingSphere();return this},computeBoundingBox:function(){var a=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var b=this.attributes.position.array;if(b){var c=this.boundingBox;c.makeEmpty();for(var d=0,e=b.length;d<e;d+=3)a.set(b[d],b[d+1],b[d+2]),c.expandByPoint(a)}if(void 0===
b||0===b.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;
if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.expandByPoint(b);a.center(d);for(var h=0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),h=Math.max(h,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(h);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=
this.attributes;if(a.position){var b=a.position.array;if(void 0===a.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(b.length),3));else for(var c=a.normal.array,d=0,e=c.length;d<e;d++)c[d]=0;var c=a.normal.array,f,h,k,m=new THREE.Vector3,n=new THREE.Vector3,q=new THREE.Vector3,p=new THREE.Vector3,l=new THREE.Vector3;if(a.index)for(var w=a.index.array,s=0<this.offsets.length?this.offsets:[{start:0,count:w.length,index:0}],t=0,v=s.length;t<v;++t){e=s[t].start;f=s[t].count;
for(var z=s[t].index,d=e,e=e+f;d<e;d+=3)f=3*(z+w[d]),h=3*(z+w[d+1]),k=3*(z+w[d+2]),m.fromArray(b,f),n.fromArray(b,h),q.fromArray(b,k),p.subVectors(q,n),l.subVectors(m,n),p.cross(l),c[f]+=p.x,c[f+1]+=p.y,c[f+2]+=p.z,c[h]+=p.x,c[h+1]+=p.y,c[h+2]+=p.z,c[k]+=p.x,c[k+1]+=p.y,c[k+2]+=p.z}else for(d=0,e=b.length;d<e;d+=9)m.fromArray(b,d),n.fromArray(b,d+3),q.fromArray(b,d+6),p.subVectors(q,n),l.subVectors(m,n),p.cross(l),c[d]=p.x,c[d+1]=p.y,c[d+2]=p.z,c[d+3]=p.x,c[d+4]=p.y,c[d+5]=p.z,c[d+6]=p.x,c[d+7]=p.y,
c[d+8]=p.z;this.normalizeNormals();a.normal.needsUpdate=!0}},computeTangents:function(){function a(a,b,c){p.fromArray(d,3*a);l.fromArray(d,3*b);w.fromArray(d,3*c);s.fromArray(f,2*a);t.fromArray(f,2*b);v.fromArray(f,2*c);z=l.x-p.x;L=w.x-p.x;R=l.y-p.y;r=w.y-p.y;W=l.z-p.z;u=w.z-p.z;M=t.x-s.x;I=v.x-s.x;E=t.y-s.y;B=v.y-s.y;D=1/(M*B-I*E);C.set((B*z-E*L)*D,(B*R-E*r)*D,(B*W-E*u)*D);H.set((M*L-I*z)*D,(M*r-I*R)*D,(M*u-I*W)*D);m[a].add(C);m[b].add(C);m[c].add(C);n[a].add(H);n[b].add(H);n[c].add(H)}function b(a){Ya.fromArray(e,
3*a);jb.copy(Ya);kb=m[a];Ua.copy(kb);Ua.sub(Ya.multiplyScalar(Ya.dot(kb))).normalize();Db.crossVectors(jb,kb);sa=Db.dot(n[a]);Pb=0>sa?-1:1;k[4*a]=Ua.x;k[4*a+1]=Ua.y;k[4*a+2]=Ua.z;k[4*a+3]=Pb}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var c=this.attributes.index.array,d=this.attributes.position.array,
e=this.attributes.normal.array,f=this.attributes.uv.array,h=d.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*h),4));for(var k=this.attributes.tangent.array,m=[],n=[],q=0;q<h;q++)m[q]=new THREE.Vector3,n[q]=new THREE.Vector3;var p=new THREE.Vector3,l=new THREE.Vector3,w=new THREE.Vector3,s=new THREE.Vector2,t=new THREE.Vector2,v=new THREE.Vector2,z,L,R,r,W,u,M,I,E,B,D,C=new THREE.Vector3,H=new THREE.Vector3,K,O,T,S,na;0===this.drawcalls.length&&
this.addDrawCall(0,c.length,0);var da=this.drawcalls,q=0;for(O=da.length;q<O;++q){K=da[q].start;T=da[q].count;var Ha=da[q].index,h=K;for(K+=T;h<K;h+=3)T=Ha+c[h],S=Ha+c[h+1],na=Ha+c[h+2],a(T,S,na)}var Ua=new THREE.Vector3,Db=new THREE.Vector3,Ya=new THREE.Vector3,jb=new THREE.Vector3,Pb,kb,sa,q=0;for(O=da.length;q<O;++q)for(K=da[q].start,T=da[q].count,Ha=da[q].index,h=K,K+=T;h<K;h+=3)T=Ha+c[h],S=Ha+c[h+1],na=Ha+c[h+2],b(T),b(S),b(na)}},computeOffsets:function(a){var b=a;void 0===a&&(b=65535);Date.now();
a=this.attributes.index.array;for(var c=this.attributes.position.array,d=a.length/3,e=new Uint16Array(a.length),f=0,h=0,k=[{start:0,count:0,index:0}],m=k[0],n=0,q=0,p=new Int32Array(6),l=new Int32Array(c.length),w=new Int32Array(c.length),s=0;s<c.length;s++)l[s]=-1,w[s]=-1;for(c=0;c<d;c++){for(var t=q=0;3>t;t++)s=a[3*c+t],-1==l[s]?(p[2*t]=s,p[2*t+1]=-1,q++):l[s]<m.index?(p[2*t]=s,p[2*t+1]=-1,n++):(p[2*t]=s,p[2*t+1]=l[s]);if(h+q>m.index+b)for(m={start:f,count:0,index:h},k.push(m),q=0;6>q;q+=2)t=p[q+
1],-1<t&&t<m.index&&(p[q+1]=-1);for(q=0;6>q;q+=2)s=p[q],t=p[q+1],-1===t&&(t=h++),l[s]=t,w[t]=s,e[f++]=t-m.index,m.count++}this.reorderBuffers(e,w,h);return this.offsets=k},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},reorderBuffers:function(a,b,c){var d={},e;for(e in this.attributes)"index"!=e&&(d[e]=new this.attributes[e].array.constructor(this.attributes[e].itemSize*
c));for(var f=0;f<c;f++){var h=b[f];for(e in this.attributes)if("index"!=e)for(var k=this.attributes[e].array,m=this.attributes[e].itemSize,n=d[e],q=0;q<m;q++)n[f*m+q]=k[h*m+q]}this.attributes.index.array=a;for(e in this.attributes)"index"!=e&&(this.attributes[e].array=d[e],this.attributes[e].numItems=this.attributes[e].itemSize*c)},toJSON:function(){var a={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},b=this.attributes,
c=this.offsets,d=this.boundingSphere,e;for(e in b){for(var f=b[e],h=[],k=f.array,m=0,n=k.length;m<n;m++)h[m]=k[m];a.data.attributes[e]={itemSize:f.itemSize,type:f.array.constructor.name,array:h}}0<c.length&&(a.data.offsets=JSON.parse(JSON.stringify(c)));null!==d&&(a.data.boundingSphere={center:d.center.toArray(),radius:d.radius});return a},clone:function(){var a=new THREE.BufferGeometry,b;for(b in this.attributes)a.addAttribute(b,this.attributes[b].clone());b=0;for(var c=this.offsets.length;b<c;b++){var d=
this.offsets[b];a.offsets.push({start:d.start,index:d.index,count:d.count})}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);
THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=
this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},
fromBufferGeometry:function(a){for(var b=this,c=a.attributes,d=c.position.array,e=void 0!==c.index?c.index.array:void 0,f=void 0!==c.normal?c.normal.array:void 0,h=void 0!==c.color?c.color.array:void 0,k=void 0!==c.uv?c.uv.array:void 0,m=[],n=[],q=c=0;c<d.length;c+=3,q+=2)b.vertices.push(new THREE.Vector3(d[c],d[c+1],d[c+2])),void 0!==f&&m.push(new THREE.Vector3(f[c],f[c+1],f[c+2])),void 0!==h&&b.colors.push(new THREE.Color(h[c],h[c+1],h[c+2])),void 0!==k&&n.push(new THREE.Vector2(k[q],k[q+1]));k=
function(a,c,d){var e=void 0!==f?[m[a].clone(),m[c].clone(),m[d].clone()]:[],k=void 0!==h?[b.colors[a].clone(),b.colors[c].clone(),b.colors[d].clone()]:[];b.faces.push(new THREE.Face3(a,c,d,e,k));b.faceVertexUvs[0].push([n[a],n[c],n[d]])};if(void 0!==e)for(c=0;c<e.length;c+=3)k(e[c],e[c+1],e[c+2]);else for(c=0;c<d.length/3;c+=3)k(c,c+1,c+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());
return this},center:function(){this.computeBoundingBox();var a=new THREE.Vector3;a.addVectors(this.boundingBox.min,this.boundingBox.max);a.multiplyScalar(-.5);this.applyMatrix((new THREE.Matrix4).makeTranslation(a.x,a.y,a.z));this.computeBoundingBox();return a},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],h=this.vertices[e.b];a.subVectors(this.vertices[e.c],h);b.subVectors(f,h);a.cross(b);a.normalize();
e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new THREE.Vector3;if(a){var e,f,h,k=new THREE.Vector3,m=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],h=this.vertices[c.c],k.subVectors(h,f),m.subVectors(e,f),k.cross(m),d[c.a].add(k),d[c.b].add(k),d[c.c].add(k)}else for(a=0,b=this.faces.length;a<
b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||
(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var h=this.morphNormals[a].vertexNormals,k,m;c=
0;for(d=this.faces.length;c<d;c++)k=new THREE.Vector3,m={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(k),h.push(m)}h=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],k=h.faceNormals[c],m=h.vertexNormals[c],k.copy(e.normal),m.a.copy(e.vertexNormals[0]),m.b.copy(e.vertexNormals[1]),m.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=
e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var a,b,c,d,e,f,h,k,m,n,q,p,l,w,s,t,v,z=[],L=[];c=new THREE.Vector3;var R=new THREE.Vector3,r=new THREE.Vector3,W=new THREE.Vector3,u=new THREE.Vector3;a=0;for(b=this.vertices.length;a<b;a++)z[a]=new THREE.Vector3,L[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)e=this.faces[a],f=this.faceVertexUvs[0][a],d=e.a,v=e.b,e=e.c,h=this.vertices[d],k=this.vertices[v],m=this.vertices[e],n=f[0],q=f[1],p=f[2],
f=k.x-h.x,l=m.x-h.x,w=k.y-h.y,s=m.y-h.y,k=k.z-h.z,h=m.z-h.z,m=q.x-n.x,t=p.x-n.x,q=q.y-n.y,n=p.y-n.y,p=1/(m*n-t*q),c.set((n*f-q*l)*p,(n*w-q*s)*p,(n*k-q*h)*p),R.set((m*l-t*f)*p,(m*s-t*w)*p,(m*h-t*k)*p),z[d].add(c),z[v].add(c),z[e].add(c),L[d].add(R),L[v].add(R),L[e].add(R);R=["a","b","c","d"];a=0;for(b=this.faces.length;a<b;a++)for(e=this.faces[a],c=0;c<Math.min(e.vertexNormals.length,3);c++)u.copy(e.vertexNormals[c]),d=e[R[c]],v=z[d],r.copy(v),r.sub(u.multiplyScalar(u.dot(v))).normalize(),W.crossVectors(e.vertexNormals[c],
v),d=W.dot(L[d]),d=0>d?-1:1,e.vertexTangents[c]=new THREE.Vector4(r.x,r.y,r.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},
merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a);else{var d,e=this.vertices.length,f=this.vertices,h=a.vertices,k=this.faces,m=a.faces,n=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var q=0,p=h.length;q<p;q++){var l=h[q].clone();void 0!==b&&l.applyMatrix4(b);f.push(l)}q=0;for(p=m.length;q<p;q++){var h=m[q],w,s=h.vertexNormals,t=
h.vertexColors,l=new THREE.Face3(h.a+e,h.b+e,h.c+e);l.normal.copy(h.normal);void 0!==d&&l.normal.applyMatrix3(d).normalize();b=0;for(f=s.length;b<f;b++)w=s[b].clone(),void 0!==d&&w.applyMatrix3(d).normalize(),l.vertexNormals.push(w);l.color.copy(h.color);b=0;for(f=t.length;b<f;b++)w=t[b],l.vertexColors.push(w.clone());l.materialIndex=h.materialIndex+c;k.push(l)}q=0;for(p=a.length;q<p;q++)if(c=a[q],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(new THREE.Vector2(c[b].x,c[b].y));n.push(d)}}},mergeVertices:function(){var a=
{},b=[],c=[],d,e=Math.pow(10,4),f,h;f=0;for(h=this.vertices.length;f<h;f++)d=this.vertices[f],d=Math.round(d.x*e)+"_"+Math.round(d.y*e)+"_"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(h=this.faces.length;f<h;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,h=this.faceVertexUvs.length;c<h;c++)this.faceVertexUvs[c].splice(e,
1);f=this.vertices.length-b.length;this.vertices=b;return f},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==n[b])return n[b];n[b]=m.length/3;m.push(a.x,a.y,a.z);return n[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==p[b])return p[b];p[b]=q.length;q.push(a.getHex());return p[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==w[b])return w[b];w[b]=l.length/2;l.push(a.x,
a.y);return w[b]}var e={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};""!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,h;for(h in f)void 0!==f[h]&&(e[h]=f[h]);return e}f=[];for(h=0;h<this.vertices.length;h++){var k=this.vertices[h];f.push(k.x,k.y,k.z)}var k=[],m=[],n={},q=[],p={},l=[],w={};for(h=0;h<this.faces.length;h++){var s=this.faces[h],t=void 0!==this.faceVertexUvs[0][h],v=0<s.normal.length(),
z=0<s.vertexNormals.length,L=1!==s.color.r||1!==s.color.g||1!==s.color.b,R=0<s.vertexColors.length,r=0,r=a(r,0,0),r=a(r,1,!1),r=a(r,2,!1),r=a(r,3,t),r=a(r,4,v),r=a(r,5,z),r=a(r,6,L),r=a(r,7,R);k.push(r);k.push(s.a,s.b,s.c);t&&(t=this.faceVertexUvs[0][h],k.push(d(t[0]),d(t[1]),d(t[2])));v&&k.push(b(s.normal));z&&(v=s.vertexNormals,k.push(b(v[0]),b(v[1]),b(v[2])));L&&k.push(c(s.color));R&&(s=s.vertexColors,k.push(c(s[0]),c(s[1]),c(s[2])))}e.data={};e.data.vertices=f;e.data.normals=m;0<q.length&&(e.data.colors=
q);0<l.length&&(e.data.uvs=[l]);e.data.faces=k;return e},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],h=0,k=e.length;h<k;h++)f.push(new THREE.Vector2(e[h].x,e[h].y));a.faceVertexUvs[0].push(f)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);
THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();
THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);return a};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type="PerspectiveCamera";this.zoom=1;this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var b=this.fullWidth/this.fullHeight,a=Math.tan(THREE.Math.degToRad(.5*a))*this.near,c=-a,d=b*c,b=Math.abs(b*a-d),c=Math.abs(a-c);this.projectionMatrix.makeFrustum(d+this.x*b/this.fullWidth,d+(this.x+this.width)*b/this.fullWidth,a-(this.y+this.height)*c/this.fullHeight,a-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(a,
this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.zoom=this.zoom;a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;a.projectionMatrix.copy(this.projectionMatrix);return a};THREE.Light=function(a){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);
THREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};
THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=
0;this.needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}},toJSON:function(){var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};""!==this.name&&
(a.name=this.name);this instanceof THREE.MeshBasicMaterial?(a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshLambertMaterial?(a.color=this.color.getHex(),a.ambient=this.ambient.getHex(),a.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&
(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshPhongMaterial?(a.color=this.color.getHex(),a.ambient=this.ambient.getHex(),a.emissive=this.emissive.getHex(),a.specular=this.specular.getHex(),a.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.shading!==
THREE.FlatShading&&(a.shading=this.shading),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.ShaderMaterial?(a.uniforms=this.uniforms,a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(a.color=this.color.getHex());
1>this.opacity&&(a.opacity=this.opacity);!1!==this.transparent&&(a.transparent=this.transparent);!1!==this.wireframe&&(a.wireframe=this.wireframe);return a},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=
this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=
this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;
a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=
1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;
a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.alphaMap=this.specularMap=null;this.combine=
THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type="MeshDepthMaterial";this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type="MeshNormalMaterial";this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type="MeshFaceMaterial";this.materials=a instanceof Array?a:[]};
THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;b<c;b++)a.materials.push(this.materials[b].toJSON());return a},clone:function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a}};
THREE.PointCloudMaterial=function(a){THREE.Material.call(this);this.type="PointCloudMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.PointCloudMaterial.prototype.clone=function(){var a=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleBasicMaterial=function(a){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(a)};
THREE.ParticleSystemMaterial=function(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(a)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=
this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var a=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,a);return a};
THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.rotation=this.rotation;a.fog=this.fog;return a};
THREE.Texture=function(a,b,c,d,e,f,h,k,m){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=
void 0!==m?m:1;this.format=void 0!==h?h:THREE.RGBAFormat;this.type=void 0!==k?k:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping;
THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=
this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointCloud=function(a,b){THREE.Object3D.call(this);this.type="PointCloud";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.PointCloudMaterial({color:16777215*Math.random()});this.sortParticles=!1};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointCloud.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(c,d){var e=this,f=e.geometry,h=c.params.PointCloud.threshold;a.getInverse(this.matrixWorld);b.copy(c.ray).applyMatrix4(a);if(null===f.boundingBox||!1!==b.isIntersectionBox(f.boundingBox)){var k=h/((this.scale.x+this.scale.y+this.scale.z)/3),m=new THREE.Vector3,h=function(a,f){var h=b.distanceToPoint(a);if(h<k){var l=b.closestPointToPoint(a);l.applyMatrix4(e.matrixWorld);var m=c.ray.origin.distanceTo(l);
d.push({distance:m,distanceToRay:h,point:l.clone(),index:f,face:null,object:e})}};if(f instanceof THREE.BufferGeometry){var n=f.attributes,q=n.position.array;if(void 0!==n.index){var n=n.index.array,p=f.offsets;0===p.length&&(p=[{start:0,count:n.length,index:0}]);for(var l=0,w=p.length;l<w;++l)for(var s=p[l].start,t=p[l].index,f=s,s=s+p[l].count;f<s;f++){var v=t+n[f];m.fromArray(q,3*v);h(m,v)}}else for(n=q.length/3,f=0;f<n;f++)m.set(q[3*f],q[3*f+1],q[3*f+2]),h(m,f)}else for(m=this.geometry.vertices,
f=0;f<m.length;f++)h(m[f],f)}}}();THREE.PointCloud.prototype.clone=function(a){void 0===a&&(a=new THREE.PointCloud(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");return new THREE.PointCloud(a,b)};
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.type="Line";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.mode=void 0!==c?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,f=f*f,h=this.geometry;null===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==d.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(d.ray).applyMatrix4(a),h instanceof THREE.Geometry))for(var h=h.vertices,k=h.length,m=new THREE.Vector3,n=new THREE.Vector3,q=this.mode===THREE.LineStrip?
1:2,p=0;p<k-1;p+=q)if(!(b.distanceSqToSegment(h[p],h[p+1],n,m)>f)){var l=b.origin.distanceTo(n);l<d.near||l>d.far||e.push({distance:l,point:m.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}();THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.mode));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(h,k){var m=this.geometry;null===m.boundingSphere&&m.computeBoundingSphere();c.copy(m.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==h.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(h.ray).applyMatrix4(a),null===m.boundingBox||!1!==b.isIntersectionBox(m.boundingBox)))if(m instanceof THREE.BufferGeometry){var n=
this.material;if(void 0!==n){var q=m.attributes,p,l,w=h.precision;if(void 0!==q.index){var s=q.index.array,t=q.position.array,v=m.offsets;0===v.length&&(v=[{start:0,count:s.length,index:0}]);for(var z=0,L=v.length;z<L;++z)for(var q=v[z].start,R=v[z].index,m=q,r=q+v[z].count;m<r;m+=3){q=R+s[m];p=R+s[m+1];l=R+s[m+2];d.fromArray(t,3*q);e.fromArray(t,3*p);f.fromArray(t,3*l);var W=n.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,n.side!==THREE.DoubleSide);if(null!==W){W.applyMatrix4(this.matrixWorld);
var u=h.ray.origin.distanceTo(W);u<w||u<h.near||u>h.far||k.push({distance:u,point:W,face:new THREE.Face3(q,p,l,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this})}}}else for(t=q.position.array,s=m=0,r=t.length;m<r;m+=3,s+=9)q=m,p=m+1,l=m+2,d.fromArray(t,s),e.fromArray(t,s+3),f.fromArray(t,s+6),W=n.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,n.side!==THREE.DoubleSide),null!==W&&(W.applyMatrix4(this.matrixWorld),u=h.ray.origin.distanceTo(W),u<w||u<h.near||u>
h.far||k.push({distance:u,point:W,face:new THREE.Face3(q,p,l,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this}))}}else if(m instanceof THREE.Geometry)for(s=this.material instanceof THREE.MeshFaceMaterial,t=!0===s?this.material.materials:null,w=h.precision,v=m.vertices,z=0,L=m.faces.length;z<L;z++)if(R=m.faces[z],n=!0===s?t[R.materialIndex]:this.material,void 0!==n){q=v[R.a];p=v[R.b];l=v[R.c];if(!0===n.morphTargets){W=m.morphTargets;u=this.morphTargetInfluences;d.set(0,0,0);e.set(0,0,0);f.set(0,
0,0);for(var r=0,M=W.length;r<M;r++){var I=u[r];if(0!==I){var E=W[r].vertices;d.x+=(E[R.a].x-q.x)*I;d.y+=(E[R.a].y-q.y)*I;d.z+=(E[R.a].z-q.z)*I;e.x+=(E[R.b].x-p.x)*I;e.y+=(E[R.b].y-p.y)*I;e.z+=(E[R.b].z-p.z)*I;f.x+=(E[R.c].x-l.x)*I;f.y+=(E[R.c].y-l.y)*I;f.z+=(E[R.c].z-l.z)*I}}d.add(q);e.add(p);f.add(l);q=d;p=e;l=f}W=n.side===THREE.BackSide?b.intersectTriangle(l,p,q,!0):b.intersectTriangle(q,p,l,n.side!==THREE.DoubleSide);null!==W&&(W.applyMatrix4(this.matrixWorld),u=h.ray.origin.distanceTo(W),u<w||
u<h.near||u>h.far||k.push({distance:u,point:W,face:R,faceIndex:z,object:this}))}}}();THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e,f,h,k=0,m=this.geometry.bones.length;k<m;++k)d=this.geometry.bones[k],e=d.pos,f=d.rotq,h=d.scl,b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.set(e[0],e[1],e[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),void 0!==h?b.scale.set(h[0],h[1],h[2]):b.scale.set(1,
1,1);k=0;for(m=this.geometry.bones.length;k<m;++k)d=this.geometry.bones[k],-1!==d.parent?a[d.parent].add(a[k]):this.add(a[k])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};
THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)};
THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};
THREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),c=new Float32Array([0,0,1,0,1,1,0,1]),d=new THREE.BufferGeometry;d.addAttribute("index",new THREE.BufferAttribute(a,1));d.addAttribute("position",new THREE.BufferAttribute(b,3));d.addAttribute("uv",new THREE.BufferAttribute(c,2));return function(a){THREE.Object3D.call(this);this.type="Sprite";this.geometry=d;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();
THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceToPoint(a);d>this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Particle=THREE.Sprite;
THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)};THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.overrideMaterial=this.fog=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.ShaderChunk={};THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";
THREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];b[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e}}return b}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",
value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},
hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},
opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,
THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,
{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\tgl_FragColor.xyz *= vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz *= vLightBack;\n\t#else\n\t\tgl_FragColor.xyz *= vLightFront;\n\t#endif",
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},
specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG\nuniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,
THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,
"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,
"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",
value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},
specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\n\tvec3 specularTex = vec3( 1.0 );\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\tif( enableDiffuse ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\n\t\t\ttexelColor.xyz *= texelColor.xyz;\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\n\t\t#else\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n\t\t#endif\n\t}\n\tif( enableAO ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\n\t\t\taoColor.xyz *= aoColor.xyz;\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n\t\t#else\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n\t\t#endif\n\t}",
THREE.ShaderChunk.alphatest_fragment,"\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n\tvec3 finalNormal = tsb * normalTex;\n\t#ifdef FLIP_SIDED\n\t\tfinalNormal = -finalNormal;\n\t#endif\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\t#if MAX_POINT_LIGHTS > 0\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat pointDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\t\tpointVector = normalize( pointVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n\t\t\t#endif\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\tvec3 spotDiffuse = vec3( 0.0 );\n\t\tvec3 spotSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat spotDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tspotVector = normalize( spotVector );\n\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t\t#else\n\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t#endif\n\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\n\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n\t\t\t}\n\t\t}\n\t#endif\n\t#if MAX_DIR_LIGHTS > 0\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\t\t\t#endif\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\tvec3 hemiDiffuse = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t\themiDiffuse += diffuse * hemiColor;\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\t\t\tvec3 lVectorGround = -lVector;\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t\t}\n\t#endif\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\t#endif\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\ttotalDiffuse += spotDiffuse;\n\t\ttotalSpecular += spotSpecular;\n\t#endif\n\t#ifdef METAL\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\t#else\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\t#endif\n\tif ( enableReflection ) {\n\t\tvec3 vReflect;\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tif ( useRefract ) {\n\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\n\t\t} else {\n\t\t\tvReflect = reflect( cameraToVertex, normal );\n\t\t}\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n\t\t#ifdef GAMMA_INPUT\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\n\t\t#endif\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n\t}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING\n\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\n\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n\t#else\n\t\tvNormal = normalize( normalMatrix * normal );\n\t\tvTangent = normalize( normalMatrix * tangent.xyz );\n\t#endif\n\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\tvUv = uv * uRepeat + uOffset;\n\tvec3 displacedPosition;\n\t#ifdef VERTEX_TEXTURES\n\t\tif ( enableDisplacement ) {\n\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\n\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\t\tdisplacedPosition = position + normalize( normal ) * df;\n\t\t} else {\n\t\t\t#ifdef USE_SKINNING\n\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\t\tdisplacedPosition = skinned.xyz;\n\t\t\t#else\n\t\t\t\tdisplacedPosition = position;\n\t\t\t#endif\n\t\t}\n\t#else\n\t\t#ifdef USE_SKINNING\n\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\tdisplacedPosition = skinned.xyz;\n\t\t#else\n\t\t\tdisplacedPosition = position;\n\t\t#endif\n\t#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;\n\tvViewPosition = -mvPosition.xyz;\n\t#ifdef USE_SHADOWMAP\n\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\t}\n\t#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",
THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}};
THREE.WebGLRenderer=function(a){function b(a){var b=a.geometry;a=a.material;var c=b.vertices.length;if(a.attributes){void 0===b.__webglCustomAttributesList&&(b.__webglCustomAttributesList=[]);for(var d in a.attributes){var e=a.attributes[d];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var f=1;"v2"===e.type?f=2:"v3"===e.type?f=3:"v4"===e.type?f=4:"c"===e.type&&(f=3);e.size=f;e.array=new Float32Array(c*f);e.buffer=g.createBuffer();e.buffer.belongsToAttribute=d;e.needsUpdate=
!0}b.__webglCustomAttributesList.push(e)}}}function c(a,b){var c=b.geometry,e=a.faces3,f=3*e.length,h=1*e.length,k=3*e.length,e=d(b,a);a.__vertexArray=new Float32Array(3*f);a.__normalArray=new Float32Array(3*f);a.__colorArray=new Float32Array(3*f);a.__uvArray=new Float32Array(2*f);1<c.faceVertexUvs.length&&(a.__uv2Array=new Float32Array(2*f));c.hasTangents&&(a.__tangentArray=new Float32Array(4*f));b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*
f),a.__skinWeightArray=new Float32Array(4*f));c=null!==ha.get("OES_element_index_uint")&&21845<h?Uint32Array:Uint16Array;a.__typeArray=c;a.__faceArray=new c(3*h);a.__lineArray=new c(2*k);var l;if(a.numMorphTargets)for(a.__morphTargetsArrays=[],c=0,l=a.numMorphTargets;c<l;c++)a.__morphTargetsArrays.push(new Float32Array(3*f));if(a.numMorphNormals)for(a.__morphNormalsArrays=[],c=0,l=a.numMorphNormals;c<l;c++)a.__morphNormalsArrays.push(new Float32Array(3*f));a.__webglFaceCount=3*h;a.__webglLineCount=
2*k;if(e.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var m in e.attributes){var h=e.attributes[m],k={},n;for(n in h)k[n]=h[n];if(!k.__webglInitialized||k.createUniqueBuffers)k.__webglInitialized=!0,c=1,"v2"===k.type?c=2:"v3"===k.type?c=3:"v4"===k.type?c=4:"c"===k.type&&(c=3),k.size=c,k.array=new Float32Array(f*c),k.buffer=g.createBuffer(),k.buffer.belongsToAttribute=m,h.needsUpdate=!0,k.__original=h;a.__webglCustomAttributesList.push(k)}}a.__inittedArrays=
!0}function d(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function e(a,b,c,d){c=c.attributes;var e=b.attributes;b=b.attributesKeys;for(var f=0,l=b.length;f<l;f++){var m=b[f],n=e[m];if(0<=n){var p=c[m];void 0!==p?(m=p.itemSize,g.bindBuffer(g.ARRAY_BUFFER,p.buffer),h(n),g.vertexAttribPointer(n,m,g.FLOAT,!1,0,d*m*4)):void 0!==a.defaultAttributeValues&&(2===a.defaultAttributeValues[m].length?g.vertexAttrib2fv(n,a.defaultAttributeValues[m]):
3===a.defaultAttributeValues[m].length&&g.vertexAttrib3fv(n,a.defaultAttributeValues[m]))}}k()}function f(){for(var a=0,b=Eb.length;a<b;a++)Eb[a]=0}function h(a){Eb[a]=1;0===ab[a]&&(g.enableVertexAttribArray(a),ab[a]=1)}function k(){for(var a=0,b=ab.length;a<b;a++)ab[a]!==Eb[a]&&(g.disableVertexAttribArray(a),ab[a]=0)}function m(a,b){return a.material.id!==b.material.id?b.material.id-a.material.id:a.z!==b.z?b.z-a.z:a.id-b.id}function n(a,b){return a.z!==b.z?a.z-b.z:a.id-b.id}function q(a,b){return b[0]-
a[0]}function p(a,e){if(!1!==e.visible){if(!(e instanceof THREE.Scene||e instanceof THREE.Group)){void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,e.addEventListener("removed",Hc));var f=e.geometry;if(void 0!==f&&void 0===f.__webglInit&&(f.__webglInit=!0,f.addEventListener("dispose",Ic),!(f instanceof THREE.BufferGeometry)))if(e instanceof THREE.Mesh)t(a,e,f);else if(e instanceof THREE.Line){if(void 0===f.__webglVertexBuffer){f.__webglVertexBuffer=
g.createBuffer();f.__webglColorBuffer=g.createBuffer();f.__webglLineDistanceBuffer=g.createBuffer();A.info.memory.geometries++;var h=f.vertices.length;f.__vertexArray=new Float32Array(3*h);f.__colorArray=new Float32Array(3*h);f.__lineDistanceArray=new Float32Array(1*h);f.__webglLineCount=h;b(e);f.verticesNeedUpdate=!0;f.colorsNeedUpdate=!0;f.lineDistancesNeedUpdate=!0}}else if(e instanceof THREE.PointCloud&&void 0===f.__webglVertexBuffer){f.__webglVertexBuffer=g.createBuffer();f.__webglColorBuffer=
g.createBuffer();A.info.memory.geometries++;var k=f.vertices.length;f.__vertexArray=new Float32Array(3*k);f.__colorArray=new Float32Array(3*k);f.__sortArray=[];f.__webglParticleCount=k;b(e);f.verticesNeedUpdate=!0;f.colorsNeedUpdate=!0}if(void 0===e.__webglActive)if(e.__webglActive=!0,e instanceof THREE.Mesh)if(f instanceof THREE.BufferGeometry)v(ib,f,e);else{if(f instanceof THREE.Geometry)for(var l=Fb[f.id],m=0,n=l.length;m<n;m++)v(ib,l[m],e)}else e instanceof THREE.Line||e instanceof THREE.PointCloud?
v(ib,f,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&Za.push({id:null,object:e,opaque:null,transparent:null,z:0});if(e instanceof THREE.Light)Na.push(e);else if(e instanceof THREE.Sprite)zc.push(e);else if(e instanceof THREE.LensFlare)Ac.push(e);else{var s=ib[e.id];if(s&&(!1===e.frustumCulled||!0===Bc.intersectsObject(e))){var r=e.geometry,w,u;if(r instanceof THREE.BufferGeometry)for(var B=r.attributes,E=r.attributesKeys,D=0,H=E.length;D<H;D++){var M=E[D],I=B[M];void 0===
I.buffer&&(I.buffer=g.createBuffer(),I.needsUpdate=!0);if(!0===I.needsUpdate){var R="index"===M?g.ELEMENT_ARRAY_BUFFER:g.ARRAY_BUFFER;g.bindBuffer(R,I.buffer);g.bufferData(R,I.array,g.STATIC_DRAW);I.needsUpdate=!1}}else if(e instanceof THREE.Mesh){!0===r.groupsNeedUpdate&&t(a,e,r);for(var K=Fb[r.id],W=0,S=K.length;W<S;W++){var T=K[W];u=d(e,T);!0===r.groupsNeedUpdate&&c(T,e);w=u.attributes&&z(u);if(r.verticesNeedUpdate||r.morphTargetsNeedUpdate||r.elementsNeedUpdate||r.uvsNeedUpdate||r.normalsNeedUpdate||
r.colorsNeedUpdate||r.tangentsNeedUpdate||w){var C=T,O=g.DYNAMIC_DRAW,da=!r.dynamic,ha=u;if(C.__inittedArrays){var ua=ha&&void 0!==ha.shading&&ha.shading===THREE.SmoothShading,F=void 0,ba=void 0,na=void 0,$=void 0,sa=void 0,Ha=void 0,Ta=void 0,kb=void 0,Ma=void 0,lb=void 0,Ua=void 0,Y=void 0,Z=void 0,X=void 0,sb=void 0,mb=void 0,la=void 0,G=void 0,qc=void 0,ja=void 0,Ea=void 0,ia=void 0,nb=void 0,ob=void 0,pb=void 0,va=void 0,Gb=void 0,Hb=void 0,Aa=void 0,ta=void 0,Ya=void 0,oa=void 0,Cc=void 0,Dc=
void 0,Ca=void 0,Jc=void 0,bb=void 0,Oa=void 0,Qb=void 0,uc=void 0,Pa=0,$a=0,rc=0,tb=0,ub=0,Va=0,Ba=0,Qa=0,ya=0,ea=0,qa=0,y=0,Da=void 0,Ra=C.__vertexArray,vb=C.__uvArray,wb=C.__uv2Array,Ga=C.__normalArray,wa=C.__tangentArray,pa=C.__colorArray,xa=C.__skinIndexArray,Ia=C.__skinWeightArray,ab=C.__morphTargetsArrays,Ib=C.__morphNormalsArrays,Ec=C.__webglCustomAttributesList,x=void 0,Wa=C.__faceArray,qb=C.__lineArray,ma=e.geometry,Jb=ma.elementsNeedUpdate,Sa=ma.uvsNeedUpdate,ad=ma.normalsNeedUpdate,ec=
ma.tangentsNeedUpdate,ca=ma.colorsNeedUpdate,fc=ma.morphTargetsNeedUpdate,N=ma.vertices,J=C.faces3,U=ma.faces,Ja=ma.faceVertexUvs[0],ra=ma.faceVertexUvs[1],Fc=ma.skinIndices,Yb=ma.skinWeights,Rb=ma.morphTargets,xb=ma.morphNormals;if(ma.verticesNeedUpdate){F=0;for(ba=J.length;F<ba;F++)$=U[J[F]],Y=N[$.a],Z=N[$.b],X=N[$.c],Ra[$a]=Y.x,Ra[$a+1]=Y.y,Ra[$a+2]=Y.z,Ra[$a+3]=Z.x,Ra[$a+4]=Z.y,Ra[$a+5]=Z.z,Ra[$a+6]=X.x,Ra[$a+7]=X.y,Ra[$a+8]=X.z,$a+=9;g.bindBuffer(g.ARRAY_BUFFER,C.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,
Ra,O)}if(fc)for(Ca=0,Jc=Rb.length;Ca<Jc;Ca++){F=qa=0;for(ba=J.length;F<ba;F++)Qb=J[F],$=U[Qb],Y=Rb[Ca].vertices[$.a],Z=Rb[Ca].vertices[$.b],X=Rb[Ca].vertices[$.c],bb=ab[Ca],bb[qa]=Y.x,bb[qa+1]=Y.y,bb[qa+2]=Y.z,bb[qa+3]=Z.x,bb[qa+4]=Z.y,bb[qa+5]=Z.z,bb[qa+6]=X.x,bb[qa+7]=X.y,bb[qa+8]=X.z,ha.morphNormals&&(ua?(uc=xb[Ca].vertexNormals[Qb],G=uc.a,qc=uc.b,ja=uc.c):ja=qc=G=xb[Ca].faceNormals[Qb],Oa=Ib[Ca],Oa[qa]=G.x,Oa[qa+1]=G.y,Oa[qa+2]=G.z,Oa[qa+3]=qc.x,Oa[qa+4]=qc.y,Oa[qa+5]=qc.z,Oa[qa+6]=ja.x,Oa[qa+
7]=ja.y,Oa[qa+8]=ja.z),qa+=9;g.bindBuffer(g.ARRAY_BUFFER,C.__webglMorphTargetsBuffers[Ca]);g.bufferData(g.ARRAY_BUFFER,ab[Ca],O);ha.morphNormals&&(g.bindBuffer(g.ARRAY_BUFFER,C.__webglMorphNormalsBuffers[Ca]),g.bufferData(g.ARRAY_BUFFER,Ib[Ca],O))}if(Yb.length){F=0;for(ba=J.length;F<ba;F++)$=U[J[F]],ob=Yb[$.a],pb=Yb[$.b],va=Yb[$.c],Ia[ea]=ob.x,Ia[ea+1]=ob.y,Ia[ea+2]=ob.z,Ia[ea+3]=ob.w,Ia[ea+4]=pb.x,Ia[ea+5]=pb.y,Ia[ea+6]=pb.z,Ia[ea+7]=pb.w,Ia[ea+8]=va.x,Ia[ea+9]=va.y,Ia[ea+10]=va.z,Ia[ea+11]=va.w,
Gb=Fc[$.a],Hb=Fc[$.b],Aa=Fc[$.c],xa[ea]=Gb.x,xa[ea+1]=Gb.y,xa[ea+2]=Gb.z,xa[ea+3]=Gb.w,xa[ea+4]=Hb.x,xa[ea+5]=Hb.y,xa[ea+6]=Hb.z,xa[ea+7]=Hb.w,xa[ea+8]=Aa.x,xa[ea+9]=Aa.y,xa[ea+10]=Aa.z,xa[ea+11]=Aa.w,ea+=12;0<ea&&(g.bindBuffer(g.ARRAY_BUFFER,C.__webglSkinIndicesBuffer),g.bufferData(g.ARRAY_BUFFER,xa,O),g.bindBuffer(g.ARRAY_BUFFER,C.__webglSkinWeightsBuffer),g.bufferData(g.ARRAY_BUFFER,Ia,O))}if(ca){F=0;for(ba=J.length;F<ba;F++)$=U[J[F]],Ta=$.vertexColors,kb=$.color,3===Ta.length&&ha.vertexColors===
THREE.VertexColors?(Ea=Ta[0],ia=Ta[1],nb=Ta[2]):nb=ia=Ea=kb,pa[ya]=Ea.r,pa[ya+1]=Ea.g,pa[ya+2]=Ea.b,pa[ya+3]=ia.r,pa[ya+4]=ia.g,pa[ya+5]=ia.b,pa[ya+6]=nb.r,pa[ya+7]=nb.g,pa[ya+8]=nb.b,ya+=9;0<ya&&(g.bindBuffer(g.ARRAY_BUFFER,C.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,pa,O))}if(ec&&ma.hasTangents){F=0;for(ba=J.length;F<ba;F++)$=U[J[F]],Ma=$.vertexTangents,sb=Ma[0],mb=Ma[1],la=Ma[2],wa[Ba]=sb.x,wa[Ba+1]=sb.y,wa[Ba+2]=sb.z,wa[Ba+3]=sb.w,wa[Ba+4]=mb.x,wa[Ba+5]=mb.y,wa[Ba+6]=mb.z,wa[Ba+7]=mb.w,
wa[Ba+8]=la.x,wa[Ba+9]=la.y,wa[Ba+10]=la.z,wa[Ba+11]=la.w,Ba+=12;g.bindBuffer(g.ARRAY_BUFFER,C.__webglTangentBuffer);g.bufferData(g.ARRAY_BUFFER,wa,O)}if(ad){F=0;for(ba=J.length;F<ba;F++)if($=U[J[F]],sa=$.vertexNormals,Ha=$.normal,3===sa.length&&ua)for(ta=0;3>ta;ta++)oa=sa[ta],Ga[Va]=oa.x,Ga[Va+1]=oa.y,Ga[Va+2]=oa.z,Va+=3;else for(ta=0;3>ta;ta++)Ga[Va]=Ha.x,Ga[Va+1]=Ha.y,Ga[Va+2]=Ha.z,Va+=3;g.bindBuffer(g.ARRAY_BUFFER,C.__webglNormalBuffer);g.bufferData(g.ARRAY_BUFFER,Ga,O)}if(Sa&&Ja){F=0;for(ba=
J.length;F<ba;F++)if(na=J[F],lb=Ja[na],void 0!==lb)for(ta=0;3>ta;ta++)Cc=lb[ta],vb[rc]=Cc.x,vb[rc+1]=Cc.y,rc+=2;0<rc&&(g.bindBuffer(g.ARRAY_BUFFER,C.__webglUVBuffer),g.bufferData(g.ARRAY_BUFFER,vb,O))}if(Sa&&ra){F=0;for(ba=J.length;F<ba;F++)if(na=J[F],Ua=ra[na],void 0!==Ua)for(ta=0;3>ta;ta++)Dc=Ua[ta],wb[tb]=Dc.x,wb[tb+1]=Dc.y,tb+=2;0<tb&&(g.bindBuffer(g.ARRAY_BUFFER,C.__webglUV2Buffer),g.bufferData(g.ARRAY_BUFFER,wb,O))}if(Jb){F=0;for(ba=J.length;F<ba;F++)Wa[ub]=Pa,Wa[ub+1]=Pa+1,Wa[ub+2]=Pa+2,ub+=
3,qb[Qa]=Pa,qb[Qa+1]=Pa+1,qb[Qa+2]=Pa,qb[Qa+3]=Pa+2,qb[Qa+4]=Pa+1,qb[Qa+5]=Pa+2,Qa+=6,Pa+=3;g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,C.__webglFaceBuffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,Wa,O);g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,C.__webglLineBuffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,qb,O)}if(Ec)for(ta=0,Ya=Ec.length;ta<Ya;ta++)if(x=Ec[ta],x.__original.needsUpdate){y=0;if(1===x.size)if(void 0===x.boundTo||"vertices"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)$=U[J[F]],x.array[y]=x.value[$.a],x.array[y+
1]=x.value[$.b],x.array[y+2]=x.value[$.c],y+=3;else{if("faces"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)Da=x.value[J[F]],x.array[y]=Da,x.array[y+1]=Da,x.array[y+2]=Da,y+=3}else if(2===x.size)if(void 0===x.boundTo||"vertices"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)$=U[J[F]],Y=x.value[$.a],Z=x.value[$.b],X=x.value[$.c],x.array[y]=Y.x,x.array[y+1]=Y.y,x.array[y+2]=Z.x,x.array[y+3]=Z.y,x.array[y+4]=X.x,x.array[y+5]=X.y,y+=6;else{if("faces"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)X=Z=Y=Da=x.value[J[F]],
x.array[y]=Y.x,x.array[y+1]=Y.y,x.array[y+2]=Z.x,x.array[y+3]=Z.y,x.array[y+4]=X.x,x.array[y+5]=X.y,y+=6}else if(3===x.size){var V;V="c"===x.type?["r","g","b"]:["x","y","z"];if(void 0===x.boundTo||"vertices"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)$=U[J[F]],Y=x.value[$.a],Z=x.value[$.b],X=x.value[$.c],x.array[y]=Y[V[0]],x.array[y+1]=Y[V[1]],x.array[y+2]=Y[V[2]],x.array[y+3]=Z[V[0]],x.array[y+4]=Z[V[1]],x.array[y+5]=Z[V[2]],x.array[y+6]=X[V[0]],x.array[y+7]=X[V[1]],x.array[y+8]=X[V[2]],y+=9;else if("faces"===
x.boundTo)for(F=0,ba=J.length;F<ba;F++)X=Z=Y=Da=x.value[J[F]],x.array[y]=Y[V[0]],x.array[y+1]=Y[V[1]],x.array[y+2]=Y[V[2]],x.array[y+3]=Z[V[0]],x.array[y+4]=Z[V[1]],x.array[y+5]=Z[V[2]],x.array[y+6]=X[V[0]],x.array[y+7]=X[V[1]],x.array[y+8]=X[V[2]],y+=9;else if("faceVertices"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)Da=x.value[J[F]],Y=Da[0],Z=Da[1],X=Da[2],x.array[y]=Y[V[0]],x.array[y+1]=Y[V[1]],x.array[y+2]=Y[V[2]],x.array[y+3]=Z[V[0]],x.array[y+4]=Z[V[1]],x.array[y+5]=Z[V[2]],x.array[y+6]=X[V[0]],
x.array[y+7]=X[V[1]],x.array[y+8]=X[V[2]],y+=9}else if(4===x.size)if(void 0===x.boundTo||"vertices"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)$=U[J[F]],Y=x.value[$.a],Z=x.value[$.b],X=x.value[$.c],x.array[y]=Y.x,x.array[y+1]=Y.y,x.array[y+2]=Y.z,x.array[y+3]=Y.w,x.array[y+4]=Z.x,x.array[y+5]=Z.y,x.array[y+6]=Z.z,x.array[y+7]=Z.w,x.array[y+8]=X.x,x.array[y+9]=X.y,x.array[y+10]=X.z,x.array[y+11]=X.w,y+=12;else if("faces"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)X=Z=Y=Da=x.value[J[F]],x.array[y]=Y.x,
x.array[y+1]=Y.y,x.array[y+2]=Y.z,x.array[y+3]=Y.w,x.array[y+4]=Z.x,x.array[y+5]=Z.y,x.array[y+6]=Z.z,x.array[y+7]=Z.w,x.array[y+8]=X.x,x.array[y+9]=X.y,x.array[y+10]=X.z,x.array[y+11]=X.w,y+=12;else if("faceVertices"===x.boundTo)for(F=0,ba=J.length;F<ba;F++)Da=x.value[J[F]],Y=Da[0],Z=Da[1],X=Da[2],x.array[y]=Y.x,x.array[y+1]=Y.y,x.array[y+2]=Y.z,x.array[y+3]=Y.w,x.array[y+4]=Z.x,x.array[y+5]=Z.y,x.array[y+6]=Z.z,x.array[y+7]=Z.w,x.array[y+8]=X.x,x.array[y+9]=X.y,x.array[y+10]=X.z,x.array[y+11]=X.w,
y+=12;g.bindBuffer(g.ARRAY_BUFFER,x.buffer);g.bufferData(g.ARRAY_BUFFER,x.array,O)}da&&(delete C.__inittedArrays,delete C.__colorArray,delete C.__normalArray,delete C.__tangentArray,delete C.__uvArray,delete C.__uv2Array,delete C.__faceArray,delete C.__vertexArray,delete C.__lineArray,delete C.__skinIndexArray,delete C.__skinWeightArray)}}}r.verticesNeedUpdate=!1;r.morphTargetsNeedUpdate=!1;r.elementsNeedUpdate=!1;r.uvsNeedUpdate=!1;r.normalsNeedUpdate=!1;r.colorsNeedUpdate=!1;r.tangentsNeedUpdate=
!1;u.attributes&&L(u)}else if(e instanceof THREE.Line){u=d(e,r);w=u.attributes&&z(u);if(r.verticesNeedUpdate||r.colorsNeedUpdate||r.lineDistancesNeedUpdate||w){var Zb=g.DYNAMIC_DRAW,Sb,Xa,Kb,cb,fa,yb,hb=r.vertices,jb=r.colors,Db=r.lineDistances,Pb=hb.length,Eb=jb.length,jc=Db.length,Ob=r.__vertexArray,fb=r.__colorArray,gb=r.__lineDistanceArray,oc=r.colorsNeedUpdate,pc=r.lineDistancesNeedUpdate,cc=r.__webglCustomAttributesList,vc,kc,za,hc,Ka,ka;if(r.verticesNeedUpdate){for(Sb=0;Sb<Pb;Sb++)cb=hb[Sb],
fa=3*Sb,Ob[fa]=cb.x,Ob[fa+1]=cb.y,Ob[fa+2]=cb.z;g.bindBuffer(g.ARRAY_BUFFER,r.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,Ob,Zb)}if(oc){for(Xa=0;Xa<Eb;Xa++)yb=jb[Xa],fa=3*Xa,fb[fa]=yb.r,fb[fa+1]=yb.g,fb[fa+2]=yb.b;g.bindBuffer(g.ARRAY_BUFFER,r.__webglColorBuffer);g.bufferData(g.ARRAY_BUFFER,fb,Zb)}if(pc){for(Kb=0;Kb<jc;Kb++)gb[Kb]=Db[Kb];g.bindBuffer(g.ARRAY_BUFFER,r.__webglLineDistanceBuffer);g.bufferData(g.ARRAY_BUFFER,gb,Zb)}if(cc)for(vc=0,kc=cc.length;vc<kc;vc++)if(ka=cc[vc],ka.needsUpdate&&
(void 0===ka.boundTo||"vertices"===ka.boundTo)){fa=0;hc=ka.value.length;if(1===ka.size)for(za=0;za<hc;za++)ka.array[za]=ka.value[za];else if(2===ka.size)for(za=0;za<hc;za++)Ka=ka.value[za],ka.array[fa]=Ka.x,ka.array[fa+1]=Ka.y,fa+=2;else if(3===ka.size)if("c"===ka.type)for(za=0;za<hc;za++)Ka=ka.value[za],ka.array[fa]=Ka.r,ka.array[fa+1]=Ka.g,ka.array[fa+2]=Ka.b,fa+=3;else for(za=0;za<hc;za++)Ka=ka.value[za],ka.array[fa]=Ka.x,ka.array[fa+1]=Ka.y,ka.array[fa+2]=Ka.z,fa+=3;else if(4===ka.size)for(za=
0;za<hc;za++)Ka=ka.value[za],ka.array[fa]=Ka.x,ka.array[fa+1]=Ka.y,ka.array[fa+2]=Ka.z,ka.array[fa+3]=Ka.w,fa+=4;g.bindBuffer(g.ARRAY_BUFFER,ka.buffer);g.bufferData(g.ARRAY_BUFFER,ka.array,Zb)}}r.verticesNeedUpdate=!1;r.colorsNeedUpdate=!1;r.lineDistancesNeedUpdate=!1;u.attributes&&L(u)}else if(e instanceof THREE.PointCloud){u=d(e,r);w=u.attributes&&z(u);if(r.verticesNeedUpdate||r.colorsNeedUpdate||e.sortParticles||w){var dc=g.DYNAMIC_DRAW,La,zb,Ab,Q,Bb,Tb,wc=r.vertices,gc=wc.length,Cb=r.colors,Xb=
Cb.length,$b=r.__vertexArray,ac=r.__colorArray,Lb=r.__sortArray,lc=r.verticesNeedUpdate,mc=r.colorsNeedUpdate,Mb=r.__webglCustomAttributesList,db,ic,aa,eb,ga,P;if(e.sortParticles){Gc.copy(xc);Gc.multiply(e.matrixWorld);for(La=0;La<gc;La++)Ab=wc[La],Fa.copy(Ab),Fa.applyProjection(Gc),Lb[La]=[Fa.z,La];Lb.sort(q);for(La=0;La<gc;La++)Ab=wc[Lb[La][1]],Q=3*La,$b[Q]=Ab.x,$b[Q+1]=Ab.y,$b[Q+2]=Ab.z;for(zb=0;zb<Xb;zb++)Q=3*zb,Tb=Cb[Lb[zb][1]],ac[Q]=Tb.r,ac[Q+1]=Tb.g,ac[Q+2]=Tb.b;if(Mb)for(db=0,ic=Mb.length;db<
ic;db++)if(P=Mb[db],void 0===P.boundTo||"vertices"===P.boundTo)if(Q=0,eb=P.value.length,1===P.size)for(aa=0;aa<eb;aa++)Bb=Lb[aa][1],P.array[aa]=P.value[Bb];else if(2===P.size)for(aa=0;aa<eb;aa++)Bb=Lb[aa][1],ga=P.value[Bb],P.array[Q]=ga.x,P.array[Q+1]=ga.y,Q+=2;else if(3===P.size)if("c"===P.type)for(aa=0;aa<eb;aa++)Bb=Lb[aa][1],ga=P.value[Bb],P.array[Q]=ga.r,P.array[Q+1]=ga.g,P.array[Q+2]=ga.b,Q+=3;else for(aa=0;aa<eb;aa++)Bb=Lb[aa][1],ga=P.value[Bb],P.array[Q]=ga.x,P.array[Q+1]=ga.y,P.array[Q+2]=
ga.z,Q+=3;else if(4===P.size)for(aa=0;aa<eb;aa++)Bb=Lb[aa][1],ga=P.value[Bb],P.array[Q]=ga.x,P.array[Q+1]=ga.y,P.array[Q+2]=ga.z,P.array[Q+3]=ga.w,Q+=4}else{if(lc)for(La=0;La<gc;La++)Ab=wc[La],Q=3*La,$b[Q]=Ab.x,$b[Q+1]=Ab.y,$b[Q+2]=Ab.z;if(mc)for(zb=0;zb<Xb;zb++)Tb=Cb[zb],Q=3*zb,ac[Q]=Tb.r,ac[Q+1]=Tb.g,ac[Q+2]=Tb.b;if(Mb)for(db=0,ic=Mb.length;db<ic;db++)if(P=Mb[db],P.needsUpdate&&(void 0===P.boundTo||"vertices"===P.boundTo))if(eb=P.value.length,Q=0,1===P.size)for(aa=0;aa<eb;aa++)P.array[aa]=P.value[aa];
else if(2===P.size)for(aa=0;aa<eb;aa++)ga=P.value[aa],P.array[Q]=ga.x,P.array[Q+1]=ga.y,Q+=2;else if(3===P.size)if("c"===P.type)for(aa=0;aa<eb;aa++)ga=P.value[aa],P.array[Q]=ga.r,P.array[Q+1]=ga.g,P.array[Q+2]=ga.b,Q+=3;else for(aa=0;aa<eb;aa++)ga=P.value[aa],P.array[Q]=ga.x,P.array[Q+1]=ga.y,P.array[Q+2]=ga.z,Q+=3;else if(4===P.size)for(aa=0;aa<eb;aa++)ga=P.value[aa],P.array[Q]=ga.x,P.array[Q+1]=ga.y,P.array[Q+2]=ga.z,P.array[Q+3]=ga.w,Q+=4}if(lc||e.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,r.__webglVertexBuffer),
g.bufferData(g.ARRAY_BUFFER,$b,dc);if(mc||e.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,r.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,ac,dc);if(Mb)for(db=0,ic=Mb.length;db<ic;db++)if(P=Mb[db],P.needsUpdate||e.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,P.buffer),g.bufferData(g.ARRAY_BUFFER,P.array,dc)}r.verticesNeedUpdate=!1;r.colorsNeedUpdate=!1;u.attributes&&L(u)}for(var bc=0,rb=s.length;bc<rb;bc++){var yc=s[bc],Ub=yc,nc=Ub.object,sc=Ub.buffer,tc=nc.geometry,Vb=nc.material;Vb instanceof THREE.MeshFaceMaterial?
(Vb=Vb.materials[tc instanceof THREE.BufferGeometry?0:sc.materialIndex],Ub.material=Vb,Vb.transparent?Nb.push(Ub):Wb.push(Ub)):Vb&&(Ub.material=Vb,Vb.transparent?Nb.push(Ub):Wb.push(Ub));yc.render=!0;!0===A.sortObjects&&(null!==e.renderDepth?yc.z=e.renderDepth:(Fa.setFromMatrixPosition(e.matrixWorld),Fa.applyProjection(xc),yc.z=Fa.z))}}}}bc=0;for(rb=e.children.length;bc<rb;bc++)p(a,e.children[bc])}}function l(a,b,c,d,e,g){for(var f,h=a.length-1;-1!==h;h--){f=a[h];var k=f.object,l=f.buffer;u(k,b);
if(g)f=g;else{f=f.material;if(!f)continue;e&&A.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst);A.setDepthTest(f.depthTest);A.setDepthWrite(f.depthWrite);B(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits)}A.setMaterialFaces(f);l instanceof THREE.BufferGeometry?A.renderBufferDirect(b,c,d,f,l,k):A.renderBuffer(b,c,d,f,l,k)}}function w(a,b,c,d,e,g,f){for(var h,k=0,l=a.length;k<l;k++){h=a[k];var m=h.object;if(m.visible){if(f)h=f;else{h=h[b];if(!h)continue;g&&A.setBlending(h.blending,
h.blendEquation,h.blendSrc,h.blendDst);A.setDepthTest(h.depthTest);A.setDepthWrite(h.depthWrite);B(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}A.renderImmediateObject(c,d,e,h,m)}}}function s(a){var b=a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function t(a,b,d){var e=b.material,f=!1;if(void 0===Fb[d.id]||!0===d.groupsNeedUpdate){delete ib[b.id];a=Fb;for(var h=d.id,e=e instanceof THREE.MeshFaceMaterial,k=ha.get("OES_element_index_uint")?
4294967296:65535,l,f={},m=d.morphTargets.length,n=d.morphNormals.length,p,q={},r=[],s=0,t=d.faces.length;s<t;s++){l=d.faces[s];var u=e?l.materialIndex:0;u in f||(f[u]={hash:u,counter:0});l=f[u].hash+"_"+f[u].counter;l in q||(p={id:Kc++,faces3:[],materialIndex:u,vertices:0,numMorphTargets:m,numMorphNormals:n},q[l]=p,r.push(p));q[l].vertices+3>k&&(f[u].counter+=1,l=f[u].hash+"_"+f[u].counter,l in q||(p={id:Kc++,faces3:[],materialIndex:u,vertices:0,numMorphTargets:m,numMorphNormals:n},q[l]=p,r.push(p)));
q[l].faces3.push(s);q[l].vertices+=3}a[h]=r;d.groupsNeedUpdate=!1}a=Fb[d.id];h=0;for(e=a.length;h<e;h++){k=a[h];if(void 0===k.__webglVertexBuffer){f=k;f.__webglVertexBuffer=g.createBuffer();f.__webglNormalBuffer=g.createBuffer();f.__webglTangentBuffer=g.createBuffer();f.__webglColorBuffer=g.createBuffer();f.__webglUVBuffer=g.createBuffer();f.__webglUV2Buffer=g.createBuffer();f.__webglSkinIndicesBuffer=g.createBuffer();f.__webglSkinWeightsBuffer=g.createBuffer();f.__webglFaceBuffer=g.createBuffer();
f.__webglLineBuffer=g.createBuffer();n=m=void 0;if(f.numMorphTargets)for(f.__webglMorphTargetsBuffers=[],m=0,n=f.numMorphTargets;m<n;m++)f.__webglMorphTargetsBuffers.push(g.createBuffer());if(f.numMorphNormals)for(f.__webglMorphNormalsBuffers=[],m=0,n=f.numMorphNormals;m<n;m++)f.__webglMorphNormalsBuffers.push(g.createBuffer());A.info.memory.geometries++;c(k,b);d.verticesNeedUpdate=!0;d.morphTargetsNeedUpdate=!0;d.elementsNeedUpdate=!0;d.uvsNeedUpdate=!0;d.normalsNeedUpdate=!0;d.tangentsNeedUpdate=
!0;f=d.colorsNeedUpdate=!0}else f=!1;(f||void 0===b.__webglActive)&&v(ib,k,b)}b.__webglActive=!0}function v(a,b,c){var d=c.id;a[d]=a[d]||[];a[d].push({id:d,buffer:b,object:c,material:null,z:0})}function z(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function L(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function R(a,b,c,d,e){var f,h,k,l;jc=0;if(d.needsUpdate){d.program&&Lc(d);d.addEventListener("dispose",Mc);var m;d instanceof THREE.MeshDepthMaterial?
m="depth":d instanceof THREE.MeshNormalMaterial?m="normal":d instanceof THREE.MeshBasicMaterial?m="basic":d instanceof THREE.MeshLambertMaterial?m="lambert":d instanceof THREE.MeshPhongMaterial?m="phong":d instanceof THREE.LineBasicMaterial?m="basic":d instanceof THREE.LineDashedMaterial?m="dashed":d instanceof THREE.PointCloudMaterial&&(m="particle_basic");if(m){var n=THREE.ShaderLib[m];d.__webglShader={uniforms:THREE.UniformsUtils.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}}else d.__webglShader=
{uniforms:d.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader};for(var p=0,q=0,s=0,t=0,u=0,v=b.length;u<v;u++){var w=b[u];w.onlyShadow||!1===w.visible||(w instanceof THREE.DirectionalLight&&p++,w instanceof THREE.PointLight&&q++,w instanceof THREE.SpotLight&&s++,w instanceof THREE.HemisphereLight&&t++)}f=p;h=q;k=s;l=t;for(var z,B=0,E=0,H=b.length;E<H;E++){var L=b[E];L.castShadow&&(L instanceof THREE.SpotLight&&B++,L instanceof THREE.DirectionalLight&&!L.shadowCascade&&B++)}z=B;
var R;if(cc&&e&&e.skeleton&&e.skeleton.useVertexTexture)R=1024;else{var K=g.getParameter(g.MAX_VERTEX_UNIFORM_VECTORS),O=Math.floor((K-20)/4);void 0!==e&&e instanceof THREE.SkinnedMesh&&(O=Math.min(e.skeleton.bones.length,O),O<e.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.skeleton.bones.length+", this GPU supports just "+O+" (try OpenGL instead of ANGLE)"));R=O}var ha={precision:da,supportsVertexTextures:kc,map:!!d.map,envMap:!!d.envMap,lightMap:!!d.lightMap,bumpMap:!!d.bumpMap,
normalMap:!!d.normalMap,specularMap:!!d.specularMap,alphaMap:!!d.alphaMap,vertexColors:d.vertexColors,fog:c,useFog:d.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:d.sizeAttenuation,logarithmicDepthBuffer:kb,skinning:d.skinning,maxBones:R,useVertexTexture:cc&&e&&e.skeleton&&e.skeleton.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:A.maxMorphTargets,maxMorphNormals:A.maxMorphNormals,maxDirLights:f,maxPointLights:h,maxSpotLights:k,maxHemiLights:l,maxShadows:z,
shadowMapEnabled:A.shadowMapEnabled&&e.receiveShadow&&0<z,shadowMapType:A.shadowMapType,shadowMapDebug:A.shadowMapDebug,shadowMapCascade:A.shadowMapCascade,alphaTest:d.alphaTest,metal:d.metal,wrapAround:d.wrapAround,doubleSided:d.side===THREE.DoubleSide,flipSided:d.side===THREE.BackSide},na=[];m?na.push(m):(na.push(d.fragmentShader),na.push(d.vertexShader));if(void 0!==d.defines)for(var F in d.defines)na.push(F),na.push(d.defines[F]);for(F in ha)na.push(F),na.push(ha[F]);for(var ba=na.join(),sa,$=
0,Ha=Ta.length;$<Ha;$++){var Ma=Ta[$];if(Ma.code===ba){sa=Ma;sa.usedTimes++;break}}void 0===sa&&(sa=new THREE.WebGLProgram(A,ba,d,ha),Ta.push(sa),A.info.memory.programs=Ta.length);d.program=sa;var Ua=sa.attributes;if(d.morphTargets){d.numSupportedMorphTargets=0;for(var Na,Ya="morphTarget",lb=0;lb<A.maxMorphTargets;lb++)Na=Ya+lb,0<=Ua[Na]&&d.numSupportedMorphTargets++}if(d.morphNormals)for(d.numSupportedMorphNormals=0,Ya="morphNormal",lb=0;lb<A.maxMorphNormals;lb++)Na=Ya+lb,0<=Ua[Na]&&d.numSupportedMorphNormals++;
d.uniformsList=[];for(var fb in d.__webglShader.uniforms){var Y=d.program.uniforms[fb];Y&&d.uniformsList.push([d.__webglShader.uniforms[fb],Y])}d.needsUpdate=!1}d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(A.maxMorphTargets));var Z=!1,X=!1,sb=!1,mb=d.program,la=mb.uniforms,G=d.__webglShader.uniforms;mb.id!==dc&&(g.useProgram(mb.program),dc=mb.id,sb=X=Z=!0);d.id!==ec&&(-1===ec&&(sb=!0),ec=d.id,X=!0);if(Z||a!==fc)g.uniformMatrix4fv(la.projectionMatrix,
!1,a.projectionMatrix.elements),kb&&g.uniform1f(la.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==fc&&(fc=a),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==la.cameraPosition&&(Fa.setFromMatrixPosition(a.matrixWorld),g.uniform3f(la.cameraPosition,Fa.x,Fa.y,Fa.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==la.viewMatrix&&g.uniformMatrix4fv(la.viewMatrix,!1,a.matrixWorldInverse.elements);
if(d.skinning)if(e.bindMatrix&&null!==la.bindMatrix&&g.uniformMatrix4fv(la.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&null!==la.bindMatrixInverse&&g.uniformMatrix4fv(la.bindMatrixInverse,!1,e.bindMatrixInverse.elements),cc&&e.skeleton&&e.skeleton.useVertexTexture){if(null!==la.boneTexture){var ib=W();g.uniform1i(la.boneTexture,ib);A.setTexture(e.skeleton.boneTexture,ib)}null!==la.boneTextureWidth&&g.uniform1i(la.boneTextureWidth,e.skeleton.boneTextureWidth);null!==la.boneTextureHeight&&
g.uniform1i(la.boneTextureHeight,e.skeleton.boneTextureHeight)}else e.skeleton&&e.skeleton.boneMatrices&&null!==la.boneGlobalMatrices&&g.uniformMatrix4fv(la.boneGlobalMatrices,!1,e.skeleton.boneMatrices);if(X){c&&d.fog&&(G.fogColor.value=c.color,c instanceof THREE.Fog?(G.fogNear.value=c.near,G.fogFar.value=c.far):c instanceof THREE.FogExp2&&(G.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Ob){var sb=!0,ja,Ea,ia,nb=0,ob=0,
pb=0,va,Gb,Hb,Aa,ta,ab,oa=Nc,Za=oa.directional.colors,hb=oa.directional.positions,Ca=oa.point.colors,jb=oa.point.positions,bb=oa.point.distances,Oa=oa.spot.colors,Qb=oa.spot.positions,Db=oa.spot.distances,Pa=oa.spot.directions,$a=oa.spot.anglesCos,Fb=oa.spot.exponents,tb=oa.hemi.skyColors,ub=oa.hemi.groundColors,Va=oa.hemi.positions,Ba=0,Qa=0,ya=0,ea=0,qa=0,y=0,Da=0,Ra=0,vb=0,wb=0,Ga=0,wa=0;ja=0;for(Ea=b.length;ja<Ea;ja++)ia=b[ja],ia.onlyShadow||(va=ia.color,Aa=ia.intensity,ab=ia.distance,ia instanceof
THREE.AmbientLight?ia.visible&&(A.gammaInput?(nb+=va.r*va.r,ob+=va.g*va.g,pb+=va.b*va.b):(nb+=va.r,ob+=va.g,pb+=va.b)):ia instanceof THREE.DirectionalLight?(qa+=1,ia.visible&&(ua.setFromMatrixPosition(ia.matrixWorld),Fa.setFromMatrixPosition(ia.target.matrixWorld),ua.sub(Fa),ua.normalize(),vb=3*Ba,hb[vb]=ua.x,hb[vb+1]=ua.y,hb[vb+2]=ua.z,A.gammaInput?M(Za,vb,va,Aa*Aa):I(Za,vb,va,Aa),Ba+=1)):ia instanceof THREE.PointLight?(y+=1,ia.visible&&(wb=3*Qa,A.gammaInput?M(Ca,wb,va,Aa*Aa):I(Ca,wb,va,Aa),Fa.setFromMatrixPosition(ia.matrixWorld),
jb[wb]=Fa.x,jb[wb+1]=Fa.y,jb[wb+2]=Fa.z,bb[Qa]=ab,Qa+=1)):ia instanceof THREE.SpotLight?(Da+=1,ia.visible&&(Ga=3*ya,A.gammaInput?M(Oa,Ga,va,Aa*Aa):I(Oa,Ga,va,Aa),ua.setFromMatrixPosition(ia.matrixWorld),Qb[Ga]=ua.x,Qb[Ga+1]=ua.y,Qb[Ga+2]=ua.z,Db[ya]=ab,Fa.setFromMatrixPosition(ia.target.matrixWorld),ua.sub(Fa),ua.normalize(),Pa[Ga]=ua.x,Pa[Ga+1]=ua.y,Pa[Ga+2]=ua.z,$a[ya]=Math.cos(ia.angle),Fb[ya]=ia.exponent,ya+=1)):ia instanceof THREE.HemisphereLight&&(Ra+=1,ia.visible&&(ua.setFromMatrixPosition(ia.matrixWorld),
ua.normalize(),wa=3*ea,Va[wa]=ua.x,Va[wa+1]=ua.y,Va[wa+2]=ua.z,Gb=ia.color,Hb=ia.groundColor,A.gammaInput?(ta=Aa*Aa,M(tb,wa,Gb,ta),M(ub,wa,Hb,ta)):(I(tb,wa,Gb,Aa),I(ub,wa,Hb,Aa)),ea+=1)));ja=3*Ba;for(Ea=Math.max(Za.length,3*qa);ja<Ea;ja++)Za[ja]=0;ja=3*Qa;for(Ea=Math.max(Ca.length,3*y);ja<Ea;ja++)Ca[ja]=0;ja=3*ya;for(Ea=Math.max(Oa.length,3*Da);ja<Ea;ja++)Oa[ja]=0;ja=3*ea;for(Ea=Math.max(tb.length,3*Ra);ja<Ea;ja++)tb[ja]=0;ja=3*ea;for(Ea=Math.max(ub.length,3*Ra);ja<Ea;ja++)ub[ja]=0;oa.directional.length=
Ba;oa.point.length=Qa;oa.spot.length=ya;oa.hemi.length=ea;oa.ambient[0]=nb;oa.ambient[1]=ob;oa.ambient[2]=pb;Ob=!1}if(sb){var pa=Nc;G.ambientLightColor.value=pa.ambient;G.directionalLightColor.value=pa.directional.colors;G.directionalLightDirection.value=pa.directional.positions;G.pointLightColor.value=pa.point.colors;G.pointLightPosition.value=pa.point.positions;G.pointLightDistance.value=pa.point.distances;G.spotLightColor.value=pa.spot.colors;G.spotLightPosition.value=pa.spot.positions;G.spotLightDistance.value=
pa.spot.distances;G.spotLightDirection.value=pa.spot.directions;G.spotLightAngleCos.value=pa.spot.anglesCos;G.spotLightExponent.value=pa.spot.exponents;G.hemisphereLightSkyColor.value=pa.hemi.skyColors;G.hemisphereLightGroundColor.value=pa.hemi.groundColors;G.hemisphereLightDirection.value=pa.hemi.positions;r(G,!0)}else r(G,!1)}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){G.opacity.value=d.opacity;A.gammaInput?G.diffuse.value.copyGammaToLinear(d.color):
G.diffuse.value=d.color;G.map.value=d.map;G.lightMap.value=d.lightMap;G.specularMap.value=d.specularMap;G.alphaMap.value=d.alphaMap;d.bumpMap&&(G.bumpMap.value=d.bumpMap,G.bumpScale.value=d.bumpScale);d.normalMap&&(G.normalMap.value=d.normalMap,G.normalScale.value.copy(d.normalScale));var xa;d.map?xa=d.map:d.specularMap?xa=d.specularMap:d.normalMap?xa=d.normalMap:d.bumpMap?xa=d.bumpMap:d.alphaMap&&(xa=d.alphaMap);if(void 0!==xa){var Ia=xa.offset,Cb=xa.repeat;G.offsetRepeat.value.set(Ia.x,Ia.y,Cb.x,
Cb.y)}G.envMap.value=d.envMap;G.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;G.reflectivity.value=d.reflectivity;G.refractionRatio.value=d.refractionRatio;G.combine.value=d.combine;G.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(G.diffuse.value=d.color,G.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(G.diffuse.value=d.color,G.opacity.value=d.opacity,G.dashSize.value=d.dashSize,G.totalSize.value=
d.dashSize+d.gapSize,G.scale.value=d.scale):d instanceof THREE.PointCloudMaterial?(G.psColor.value=d.color,G.opacity.value=d.opacity,G.size.value=d.size,G.scale.value=S.height/2,G.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(G.shininess.value=d.shininess,A.gammaInput?(G.ambient.value.copyGammaToLinear(d.ambient),G.emissive.value.copyGammaToLinear(d.emissive),G.specular.value.copyGammaToLinear(d.specular)):(G.ambient.value=d.ambient,G.emissive.value=d.emissive,G.specular.value=d.specular),
d.wrapAround&&G.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(A.gammaInput?(G.ambient.value.copyGammaToLinear(d.ambient),G.emissive.value.copyGammaToLinear(d.emissive)):(G.ambient.value=d.ambient,G.emissive.value=d.emissive),d.wrapAround&&G.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(G.mNear.value=a.near,G.mFar.value=a.far,G.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(G.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&
G.shadowMatrix)for(var Ib=0,rb=0,x=b.length;rb<x;rb++){var Wa=b[rb];Wa.castShadow&&(Wa instanceof THREE.SpotLight||Wa instanceof THREE.DirectionalLight&&!Wa.shadowCascade)&&(G.shadowMap.value[Ib]=Wa.shadowMap,G.shadowMapSize.value[Ib]=Wa.shadowMapSize,G.shadowMatrix.value[Ib]=Wa.shadowMatrix,G.shadowDarkness.value[Ib]=Wa.shadowDarkness,G.shadowBias.value[Ib]=Wa.shadowBias,Ib++)}for(var qb=d.uniformsList,ma,Jb,Sa,gb=0,Pb=qb.length;gb<Pb;gb++){var ca=qb[gb][0];if(!1!==ca.needsUpdate){var Eb=ca.type,
N=ca.value,J=qb[gb][1];switch(Eb){case "1i":g.uniform1i(J,N);break;case "1f":g.uniform1f(J,N);break;case "2f":g.uniform2f(J,N[0],N[1]);break;case "3f":g.uniform3f(J,N[0],N[1],N[2]);break;case "4f":g.uniform4f(J,N[0],N[1],N[2],N[3]);break;case "1iv":g.uniform1iv(J,N);break;case "3iv":g.uniform3iv(J,N);break;case "1fv":g.uniform1fv(J,N);break;case "2fv":g.uniform2fv(J,N);break;case "3fv":g.uniform3fv(J,N);break;case "4fv":g.uniform4fv(J,N);break;case "Matrix3fv":g.uniformMatrix3fv(J,!1,N);break;case "Matrix4fv":g.uniformMatrix4fv(J,
!1,N);break;case "i":g.uniform1i(J,N);break;case "f":g.uniform1f(J,N);break;case "v2":g.uniform2f(J,N.x,N.y);break;case "v3":g.uniform3f(J,N.x,N.y,N.z);break;case "v4":g.uniform4f(J,N.x,N.y,N.z,N.w);break;case "c":g.uniform3f(J,N.r,N.g,N.b);break;case "iv1":g.uniform1iv(J,N);break;case "iv":g.uniform3iv(J,N);break;case "fv1":g.uniform1fv(J,N);break;case "fv":g.uniform3fv(J,N);break;case "v2v":void 0===ca._array&&(ca._array=new Float32Array(2*N.length));for(var U=0,Ja=N.length;U<Ja;U++)Sa=2*U,ca._array[Sa]=
N[U].x,ca._array[Sa+1]=N[U].y;g.uniform2fv(J,ca._array);break;case "v3v":void 0===ca._array&&(ca._array=new Float32Array(3*N.length));U=0;for(Ja=N.length;U<Ja;U++)Sa=3*U,ca._array[Sa]=N[U].x,ca._array[Sa+1]=N[U].y,ca._array[Sa+2]=N[U].z;g.uniform3fv(J,ca._array);break;case "v4v":void 0===ca._array&&(ca._array=new Float32Array(4*N.length));U=0;for(Ja=N.length;U<Ja;U++)Sa=4*U,ca._array[Sa]=N[U].x,ca._array[Sa+1]=N[U].y,ca._array[Sa+2]=N[U].z,ca._array[Sa+3]=N[U].w;g.uniform4fv(J,ca._array);break;case "m3":g.uniformMatrix3fv(J,
!1,N.elements);break;case "m3v":void 0===ca._array&&(ca._array=new Float32Array(9*N.length));U=0;for(Ja=N.length;U<Ja;U++)N[U].flattenToArrayOffset(ca._array,9*U);g.uniformMatrix3fv(J,!1,ca._array);break;case "m4":g.uniformMatrix4fv(J,!1,N.elements);break;case "m4v":void 0===ca._array&&(ca._array=new Float32Array(16*N.length));U=0;for(Ja=N.length;U<Ja;U++)N[U].flattenToArrayOffset(ca._array,16*U);g.uniformMatrix4fv(J,!1,ca._array);break;case "t":ma=N;Jb=W();g.uniform1i(J,Jb);if(!ma)continue;if(ma instanceof
THREE.CubeTexture||ma.image instanceof Array&&6===ma.image.length){var ra=ma,Nb=Jb;if(6===ra.image.length)if(ra.needsUpdate){ra.image.__webglTextureCube||(ra.addEventListener("dispose",gc),ra.image.__webglTextureCube=g.createTexture(),A.info.memory.textures++);g.activeTexture(g.TEXTURE0+Nb);g.bindTexture(g.TEXTURE_CUBE_MAP,ra.image.__webglTextureCube);g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,ra.flipY);for(var Yb=ra instanceof THREE.CompressedTexture,Rb=ra.image[0]instanceof THREE.DataTexture,xb=[],V=0;6>
V;V++)xb[V]=!A.autoScaleCubemaps||Yb||Rb?Rb?ra.image[V].image:ra.image[V]:C(ra.image[V],bd);var Zb=xb[0],Sb=THREE.Math.isPowerOfTwo(Zb.width)&&THREE.Math.isPowerOfTwo(Zb.height),Xa=T(ra.format),Kb=T(ra.type);D(g.TEXTURE_CUBE_MAP,ra,Sb);for(V=0;6>V;V++)if(Yb)for(var cb,fa=xb[V].mipmaps,yb=0,Wb=fa.length;yb<Wb;yb++)cb=fa[yb],ra.format!==THREE.RGBAFormat&&ra.format!==THREE.RGBFormat?-1<Oc().indexOf(Xa)?g.compressedTexImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+V,yb,Xa,cb.width,cb.height,0,cb.data):console.warn("Attempt to load unsupported compressed texture format"):
g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+V,yb,Xa,cb.width,cb.height,0,Xa,Kb,cb.data);else Rb?g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+V,0,Xa,xb[V].width,xb[V].height,0,Xa,Kb,xb[V].data):g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+V,0,Xa,Xa,Kb,xb[V]);ra.generateMipmaps&&Sb&&g.generateMipmap(g.TEXTURE_CUBE_MAP);ra.needsUpdate=!1;if(ra.onUpdate)ra.onUpdate()}else g.activeTexture(g.TEXTURE0+Nb),g.bindTexture(g.TEXTURE_CUBE_MAP,ra.image.__webglTextureCube)}else if(ma instanceof THREE.WebGLRenderTargetCube){var Xb=
ma;g.activeTexture(g.TEXTURE0+Jb);g.bindTexture(g.TEXTURE_CUBE_MAP,Xb.__webglTexture)}else A.setTexture(ma,Jb);break;case "tv":void 0===ca._array&&(ca._array=[]);U=0;for(Ja=ca.value.length;U<Ja;U++)ca._array[U]=W();g.uniform1iv(J,ca._array);U=0;for(Ja=ca.value.length;U<Ja;U++)ma=ca.value[U],Jb=ca._array[U],ma&&A.setTexture(ma,Jb);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+Eb)}}}}g.uniformMatrix4fv(la.modelViewMatrix,!1,e._modelViewMatrix.elements);la.normalMatrix&&g.uniformMatrix3fv(la.normalMatrix,
!1,e._normalMatrix.elements);null!==la.modelMatrix&&g.uniformMatrix4fv(la.modelMatrix,!1,e.matrixWorld.elements);return mb}function r(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=b;a.spotLightAngleCos.needsUpdate=
b;a.spotLightExponent.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function W(){var a=jc;a>=Pc&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Pc);jc+=1;return a}function u(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}function M(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=
c.b*c.b*d}function I(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function E(a){a!==Qc&&(g.lineWidth(a),Qc=a)}function B(a,b,c){Rc!==a&&(a?g.enable(g.POLYGON_OFFSET_FILL):g.disable(g.POLYGON_OFFSET_FILL),Rc=a);!a||Sc===b&&Tc===c||(g.polygonOffset(b,c),Sc=b,Tc=c)}function D(a,b,c){c?(g.texParameteri(a,g.TEXTURE_WRAP_S,T(b.wrapS)),g.texParameteri(a,g.TEXTURE_WRAP_T,T(b.wrapT)),g.texParameteri(a,g.TEXTURE_MAG_FILTER,T(b.magFilter)),g.texParameteri(a,g.TEXTURE_MIN_FILTER,T(b.minFilter))):(g.texParameteri(a,
g.TEXTURE_WRAP_S,g.CLAMP_TO_EDGE),g.texParameteri(a,g.TEXTURE_WRAP_T,g.CLAMP_TO_EDGE),g.texParameteri(a,g.TEXTURE_MAG_FILTER,O(b.magFilter)),g.texParameteri(a,g.TEXTURE_MIN_FILTER,O(b.minFilter)));(c=ha.get("EXT_texture_filter_anisotropic"))&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy)&&(g.texParameterf(a,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,A.getMaxAnisotropy())),b.__oldAnisotropy=b.anisotropy)}function C(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),
d=document.createElement("canvas");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.log("THREE.WebGLRenderer:",a,"is too big ("+a.width+"x"+a.height+"). Resized to "+d.width+"x"+d.height+".");return d}return a}function H(a,b){g.bindRenderbuffer(g.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(g.renderbufferStorage(g.RENDERBUFFER,g.DEPTH_COMPONENT16,b.width,b.height),g.framebufferRenderbuffer(g.FRAMEBUFFER,
g.DEPTH_ATTACHMENT,g.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(g.renderbufferStorage(g.RENDERBUFFER,g.DEPTH_STENCIL,b.width,b.height),g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_STENCIL_ATTACHMENT,g.RENDERBUFFER,a)):g.renderbufferStorage(g.RENDERBUFFER,g.RGBA4,b.width,b.height)}function K(a){a instanceof THREE.WebGLRenderTargetCube?(g.bindTexture(g.TEXTURE_CUBE_MAP,a.__webglTexture),g.generateMipmap(g.TEXTURE_CUBE_MAP),g.bindTexture(g.TEXTURE_CUBE_MAP,null)):(g.bindTexture(g.TEXTURE_2D,
a.__webglTexture),g.generateMipmap(g.TEXTURE_2D),g.bindTexture(g.TEXTURE_2D,null))}function O(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?g.NEAREST:g.LINEAR}function T(a){var b;if(a===THREE.RepeatWrapping)return g.REPEAT;if(a===THREE.ClampToEdgeWrapping)return g.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return g.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return g.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return g.NEAREST_MIPMAP_NEAREST;
if(a===THREE.NearestMipMapLinearFilter)return g.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return g.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return g.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return g.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return g.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return g.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return g.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return g.UNSIGNED_SHORT_5_6_5;
if(a===THREE.ByteType)return g.BYTE;if(a===THREE.ShortType)return g.SHORT;if(a===THREE.UnsignedShortType)return g.UNSIGNED_SHORT;if(a===THREE.IntType)return g.INT;if(a===THREE.UnsignedIntType)return g.UNSIGNED_INT;if(a===THREE.FloatType)return g.FLOAT;if(a===THREE.AlphaFormat)return g.ALPHA;if(a===THREE.RGBFormat)return g.RGB;if(a===THREE.RGBAFormat)return g.RGBA;if(a===THREE.LuminanceFormat)return g.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return g.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return g.FUNC_ADD;
if(a===THREE.SubtractEquation)return g.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return g.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return g.ZERO;if(a===THREE.OneFactor)return g.ONE;if(a===THREE.SrcColorFactor)return g.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return g.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return g.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return g.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return g.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return g.ONE_MINUS_DST_ALPHA;
if(a===THREE.DstColorFactor)return g.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return g.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return g.SRC_ALPHA_SATURATE;b=ha.get("WEBGL_compressed_texture_s3tc");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=
ha.get("WEBGL_compressed_texture_pvrtc");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=ha.get("EXT_blend_minmax");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}
console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var S=void 0!==a.canvas?a.canvas:document.createElement("canvas"),na=void 0!==a.context?a.context:null,da=void 0!==a.precision?a.precision:"highp",Ha=void 0!==a.alpha?a.alpha:!1,Ua=void 0!==a.depth?a.depth:!0,Db=void 0!==a.stencil?a.stencil:!0,Ya=void 0!==a.antialias?a.antialias:!1,jb=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,Pb=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,kb=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:
!1,sa=new THREE.Color(0),hb=0,Na=[],ib={},Za=[],Wb=[],Nb=[],zc=[],Ac=[];this.domElement=S;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=
!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var A=this,Ta=[],dc=null,Uc=null,ec=-1,Ma=-1,fc=null,jc=0,Cb=-1,Xb=-1,lc=-1,mc=-1,rb=-1,nc=-1,sc=-1,tc=-1,Rc=null,Sc=null,Tc=null,Qc=null,fb=0,gb=0,oc=S.width,pc=S.height,Vc=0,Wc=0,Eb=new Uint8Array(16),ab=new Uint8Array(16),Bc=new THREE.Frustum,xc=new THREE.Matrix4,Gc=new THREE.Matrix4,Fa=new THREE.Vector3,ua=new THREE.Vector3,
Ob=!0,Nc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},g;try{var Xc={alpha:Ha,depth:Ua,stencil:Db,antialias:Ya,premultipliedAlpha:jb,preserveDrawingBuffer:Pb};g=na||S.getContext("webgl",Xc)||S.getContext("experimental-webgl",Xc);if(null===g){if(null!==S.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";
throw"Error creating WebGL context.";}}catch(cd){console.error(cd)}void 0===g.getShaderPrecisionFormat&&(g.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var ha=new THREE.WebGLExtensions(g);ha.get("OES_texture_float");ha.get("OES_texture_float_linear");ha.get("OES_standard_derivatives");kb&&ha.get("EXT_frag_depth");g.clearColor(0,0,0,1);g.clearDepth(1);g.clearStencil(0);g.enable(g.DEPTH_TEST);g.depthFunc(g.LEQUAL);g.frontFace(g.CCW);g.cullFace(g.BACK);g.enable(g.CULL_FACE);
g.enable(g.BLEND);g.blendEquation(g.FUNC_ADD);g.blendFunc(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA);g.viewport(fb,gb,oc,pc);g.clearColor(sa.r,sa.g,sa.b,hb);this.context=g;var Pc=g.getParameter(g.MAX_TEXTURE_IMAGE_UNITS),dd=g.getParameter(g.MAX_VERTEX_TEXTURE_IMAGE_UNITS),ed=g.getParameter(g.MAX_TEXTURE_SIZE),bd=g.getParameter(g.MAX_CUBE_MAP_TEXTURE_SIZE),kc=0<dd,cc=kc&&ha.get("OES_texture_float"),fd=g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.HIGH_FLOAT),gd=g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.MEDIUM_FLOAT);
g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.LOW_FLOAT);var hd=g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.HIGH_FLOAT),id=g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.MEDIUM_FLOAT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.LOW_FLOAT);var Oc=function(){var a;return function(){if(void 0!==a)return a;a=[];if(ha.get("WEBGL_compressed_texture_pvrtc")||ha.get("WEBGL_compressed_texture_s3tc"))for(var b=g.getParameter(g.COMPRESSED_TEXTURE_FORMATS),c=0;c<b.length;c++)a.push(b[c]);return a}}(),jd=
0<fd.precision&&0<hd.precision,Yc=0<gd.precision&&0<id.precision;"highp"!==da||jd||(Yc?(da="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(da="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")));"mediump"!==da||Yc||(da="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var kd=new THREE.ShadowMapPlugin(this,Na,ib,Za),ld=new THREE.SpritePlugin(this,zc),md=new THREE.LensFlarePlugin(this,Ac);this.getContext=
function(){return g};this.supportsVertexTextures=function(){return kc};this.supportsFloatTextures=function(){return ha.get("OES_texture_float")};this.supportsStandardDerivatives=function(){return ha.get("OES_standard_derivatives")};this.supportsCompressedTextureS3TC=function(){return ha.get("WEBGL_compressed_texture_s3tc")};this.supportsCompressedTexturePVRTC=function(){return ha.get("WEBGL_compressed_texture_pvrtc")};this.supportsBlendMinMax=function(){return ha.get("EXT_blend_minmax")};this.getMaxAnisotropy=
function(){var a;return function(){if(void 0!==a)return a;var b=ha.get("EXT_texture_filter_anisotropic");return a=null!==b?g.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}();this.getPrecision=function(){return da};this.setSize=function(a,b,c){S.width=a*this.devicePixelRatio;S.height=b*this.devicePixelRatio;!1!==c&&(S.style.width=a+"px",S.style.height=b+"px");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){fb=a*this.devicePixelRatio;gb=b*this.devicePixelRatio;oc=c*this.devicePixelRatio;
pc=d*this.devicePixelRatio;g.viewport(fb,gb,oc,pc)};this.setScissor=function(a,b,c,d){g.scissor(a*this.devicePixelRatio,b*this.devicePixelRatio,c*this.devicePixelRatio,d*this.devicePixelRatio)};this.enableScissorTest=function(a){a?g.enable(g.SCISSOR_TEST):g.disable(g.SCISSOR_TEST)};this.setClearColor=function(a,b){sa.set(a);hb=void 0!==b?b:1;g.clearColor(sa.r,sa.g,sa.b,hb)};this.setClearColorHex=function(a,b){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");
this.setClearColor(a,b)};this.getClearColor=function(){return sa};this.getClearAlpha=function(){return hb};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=g.COLOR_BUFFER_BIT;if(void 0===b||b)d|=g.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=g.STENCIL_BUFFER_BIT;g.clear(d)};this.clearColor=function(){g.clear(g.COLOR_BUFFER_BIT)};this.clearDepth=function(){g.clear(g.DEPTH_BUFFER_BIT)};this.clearStencil=function(){g.clear(g.STENCIL_BUFFER_BIT)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);
this.clear(b,c,d)};this.resetGLState=function(){fc=dc=null;ec=Ma=Xb=Cb=tc=sc=lc=-1;Ob=!0};var Hc=function(a){a.target.traverse(function(a){a.removeEventListener("remove",Hc);if(a instanceof THREE.Mesh||a instanceof THREE.PointCloud||a instanceof THREE.Line)delete ib[a.id];else if(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)for(var b=Za,c=b.length-1;0<=c;c--)b[c].object===a&&b.splice(c,1);delete a.__webglInit;delete a._modelViewMatrix;delete a._normalMatrix;delete a.__webglActive})},
Ic=function(a){a=a.target;a.removeEventListener("dispose",Ic);delete a.__webglInit;if(a instanceof THREE.BufferGeometry){for(var b in a.attributes){var c=a.attributes[b];void 0!==c.buffer&&(g.deleteBuffer(c.buffer),delete c.buffer)}A.info.memory.geometries--}else if(b=Fb[a.id],void 0!==b){for(var c=0,d=b.length;c<d;c++){var e=b[c];if(void 0!==e.numMorphTargets){for(var f=0,h=e.numMorphTargets;f<h;f++)g.deleteBuffer(e.__webglMorphTargetsBuffers[f]);delete e.__webglMorphTargetsBuffers}if(void 0!==e.numMorphNormals){f=
0;for(h=e.numMorphNormals;f<h;f++)g.deleteBuffer(e.__webglMorphNormalsBuffers[f]);delete e.__webglMorphNormalsBuffers}Zc(e)}delete Fb[a.id]}else Zc(a);Ma=-1},gc=function(a){a=a.target;a.removeEventListener("dispose",gc);a.image&&a.image.__webglTextureCube?(g.deleteTexture(a.image.__webglTextureCube),delete a.image.__webglTextureCube):void 0!==a.__webglInit&&(g.deleteTexture(a.__webglTexture),delete a.__webglTexture,delete a.__webglInit);A.info.memory.textures--},$c=function(a){a=a.target;a.removeEventListener("dispose",
$c);if(a&&void 0!==a.__webglTexture){g.deleteTexture(a.__webglTexture);delete a.__webglTexture;if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)g.deleteFramebuffer(a.__webglFramebuffer[b]),g.deleteRenderbuffer(a.__webglRenderbuffer[b]);else g.deleteFramebuffer(a.__webglFramebuffer),g.deleteRenderbuffer(a.__webglRenderbuffer);delete a.__webglFramebuffer;delete a.__webglRenderbuffer}A.info.memory.textures--},Mc=function(a){a=a.target;a.removeEventListener("dispose",Mc);Lc(a)},Zc=function(a){for(var b=
"__webglVertexBuffer __webglNormalBuffer __webglTangentBuffer __webglColorBuffer __webglUVBuffer __webglUV2Buffer __webglSkinIndicesBuffer __webglSkinWeightsBuffer __webglFaceBuffer __webglLineBuffer __webglLineDistanceBuffer".split(" "),c=0,d=b.length;c<d;c++){var e=b[c];void 0!==a[e]&&(g.deleteBuffer(a[e]),delete a[e])}if(void 0!==a.__webglCustomAttributesList){for(e in a.__webglCustomAttributesList)g.deleteBuffer(a.__webglCustomAttributesList[e].buffer);delete a.__webglCustomAttributesList}A.info.memory.geometries--},
Lc=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;a=0;for(c=Ta.length;a<c;a++)if(d=Ta[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=Ta.length;a<c;a++)d=Ta[a],d.program!==b&&e.push(d);Ta=e;g.deleteProgram(b);A.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){f();a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=g.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=g.createBuffer());
a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=g.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=g.createBuffer());a.hasPositions&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglVertexBuffer),g.bufferData(g.ARRAY_BUFFER,a.positionArray,g.DYNAMIC_DRAW),h(b.attributes.position),g.vertexAttribPointer(b.attributes.position,3,g.FLOAT,!1,0,0));if(a.hasNormals){g.bindBuffer(g.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,l,m,n,p,q,r,s,t,u,v=3*a.count;for(u=
0;u<v;u+=9)t=a.normalArray,d=t[u],e=t[u+1],l=t[u+2],m=t[u+3],p=t[u+4],r=t[u+5],n=t[u+6],q=t[u+7],s=t[u+8],d=(d+m+n)/3,e=(e+p+q)/3,l=(l+r+s)/3,t[u]=d,t[u+1]=e,t[u+2]=l,t[u+3]=d,t[u+4]=e,t[u+5]=l,t[u+6]=d,t[u+7]=e,t[u+8]=l}g.bufferData(g.ARRAY_BUFFER,a.normalArray,g.DYNAMIC_DRAW);h(b.attributes.normal);g.vertexAttribPointer(b.attributes.normal,3,g.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglUvBuffer),g.bufferData(g.ARRAY_BUFFER,a.uvArray,g.DYNAMIC_DRAW),h(b.attributes.uv),g.vertexAttribPointer(b.attributes.uv,
2,g.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,a.colorArray,g.DYNAMIC_DRAW),h(b.attributes.color),g.vertexAttribPointer(b.attributes.color,3,g.FLOAT,!1,0,0));k();g.drawArrays(g.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,h,k){if(!1!==d.visible)if(a=R(a,b,c,d,k),b=!1,c=16777215*h.id+2*a.id+(d.wireframe?1:0),c!==Ma&&(Ma=c,b=!0),b&&f(),k instanceof THREE.Mesh)if(k=!0===d.wireframe?
g.LINES:g.TRIANGLES,c=h.attributes.index){var l,m;c.array instanceof Uint32Array&&ha.get("OES_element_index_uint")?(l=g.UNSIGNED_INT,m=4):(l=g.UNSIGNED_SHORT,m=2);var n=h.offsets;if(0===n.length)b&&(e(d,a,h,0),g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,c.buffer)),g.drawElements(k,c.array.length,l,0),A.info.render.calls++,A.info.render.vertices+=c.array.length,A.info.render.faces+=c.array.length/3;else{b=!0;for(var p=0,q=n.length;p<q;p++){var r=n[p].index;b&&(e(d,a,h,r),g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,
c.buffer));g.drawElements(k,n[p].count,l,n[p].start*m);A.info.render.calls++;A.info.render.vertices+=n[p].count;A.info.render.faces+=n[p].count/3}}}else b&&e(d,a,h,0),d=h.attributes.position,g.drawArrays(k,0,d.array.length/3),A.info.render.calls++,A.info.render.vertices+=d.array.length/3,A.info.render.faces+=d.array.length/9;else if(k instanceof THREE.PointCloud)b&&e(d,a,h,0),d=h.attributes.position,g.drawArrays(g.POINTS,0,d.array.length/3),A.info.render.calls++,A.info.render.points+=d.array.length/
3;else if(k instanceof THREE.Line)if(k=k.mode===THREE.LineStrip?g.LINE_STRIP:g.LINES,E(d.linewidth),c=h.attributes.index)if(c.array instanceof Uint32Array?(l=g.UNSIGNED_INT,m=4):(l=g.UNSIGNED_SHORT,m=2),n=h.offsets,0===n.length)b&&(e(d,a,h,0),g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,c.buffer)),g.drawElements(k,c.array.length,l,0),A.info.render.calls++,A.info.render.vertices+=c.array.length;else for(1<n.length&&(b=!0),p=0,q=n.length;p<q;p++)r=n[p].index,b&&(e(d,a,h,r),g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,
c.buffer)),g.drawElements(k,n[p].count,l,n[p].start*m),A.info.render.calls++,A.info.render.vertices+=n[p].count;else b&&e(d,a,h,0),d=h.attributes.position,g.drawArrays(k,0,d.array.length/3),A.info.render.calls++,A.info.render.points+=d.array.length/3};this.renderBuffer=function(a,b,c,d,e,l){if(!1!==d.visible){c=R(a,b,c,d,l);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==Ma&&(Ma=c,a=!0);a&&f();if(!d.morphTargets&&0<=b.position)a&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglVertexBuffer),
h(b.position),g.vertexAttribPointer(b.position,3,g.FLOAT,!1,0,0));else if(l.morphTargetBase){c=d.program.attributes;-1!==l.morphTargetBase&&0<=c.position?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[l.morphTargetBase]),h(c.position),g.vertexAttribPointer(c.position,3,g.FLOAT,!1,0,0)):0<=c.position&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglVertexBuffer),h(c.position),g.vertexAttribPointer(c.position,3,g.FLOAT,!1,0,0));if(l.morphTargetForcedOrder.length)for(var m=0,n=l.morphTargetForcedOrder,
p=l.morphTargetInfluences;m<d.numSupportedMorphTargets&&m<n.length;)0<=c["morphTarget"+m]&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[n[m]]),h(c["morphTarget"+m]),g.vertexAttribPointer(c["morphTarget"+m],3,g.FLOAT,!1,0,0)),0<=c["morphNormal"+m]&&d.morphNormals&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[n[m]]),h(c["morphNormal"+m]),g.vertexAttribPointer(c["morphNormal"+m],3,g.FLOAT,!1,0,0)),l.__webglMorphTargetInfluences[m]=p[n[m]],m++;else{var n=[],p=l.morphTargetInfluences,
r,s=p.length;for(r=0;r<s;r++)m=p[r],0<m&&n.push([m,r]);n.length>d.numSupportedMorphTargets?(n.sort(q),n.length=d.numSupportedMorphTargets):n.length>d.numSupportedMorphNormals?n.sort(q):0===n.length&&n.push([0,0]);for(m=0;m<d.numSupportedMorphTargets;)n[m]?(r=n[m][1],0<=c["morphTarget"+m]&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[r]),h(c["morphTarget"+m]),g.vertexAttribPointer(c["morphTarget"+m],3,g.FLOAT,!1,0,0)),0<=c["morphNormal"+m]&&d.morphNormals&&(g.bindBuffer(g.ARRAY_BUFFER,
e.__webglMorphNormalsBuffers[r]),h(c["morphNormal"+m]),g.vertexAttribPointer(c["morphNormal"+m],3,g.FLOAT,!1,0,0)),l.__webglMorphTargetInfluences[m]=p[r]):l.__webglMorphTargetInfluences[m]=0,m++}null!==d.program.uniforms.morphTargetInfluences&&g.uniform1fv(d.program.uniforms.morphTargetInfluences,l.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(c=0,p=e.__webglCustomAttributesList.length;c<p;c++)n=e.__webglCustomAttributesList[c],0<=b[n.buffer.belongsToAttribute]&&(g.bindBuffer(g.ARRAY_BUFFER,
n.buffer),h(b[n.buffer.belongsToAttribute]),g.vertexAttribPointer(b[n.buffer.belongsToAttribute],n.size,g.FLOAT,!1,0,0));0<=b.color&&(0<l.geometry.colors.length||0<l.geometry.faces.length?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglColorBuffer),h(b.color),g.vertexAttribPointer(b.color,3,g.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&g.vertexAttrib3fv(b.color,d.defaultAttributeValues.color));0<=b.normal&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglNormalBuffer),h(b.normal),g.vertexAttribPointer(b.normal,
3,g.FLOAT,!1,0,0));0<=b.tangent&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglTangentBuffer),h(b.tangent),g.vertexAttribPointer(b.tangent,4,g.FLOAT,!1,0,0));0<=b.uv&&(l.geometry.faceVertexUvs[0]?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglUVBuffer),h(b.uv),g.vertexAttribPointer(b.uv,2,g.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&g.vertexAttrib2fv(b.uv,d.defaultAttributeValues.uv));0<=b.uv2&&(l.geometry.faceVertexUvs[1]?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglUV2Buffer),h(b.uv2),g.vertexAttribPointer(b.uv2,
2,g.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&g.vertexAttrib2fv(b.uv2,d.defaultAttributeValues.uv2));d.skinning&&0<=b.skinIndex&&0<=b.skinWeight&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),h(b.skinIndex),g.vertexAttribPointer(b.skinIndex,4,g.FLOAT,!1,0,0),g.bindBuffer(g.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),h(b.skinWeight),g.vertexAttribPointer(b.skinWeight,4,g.FLOAT,!1,0,0));0<=b.lineDistance&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglLineDistanceBuffer),h(b.lineDistance),g.vertexAttribPointer(b.lineDistance,
1,g.FLOAT,!1,0,0))}k();l instanceof THREE.Mesh?(l=e.__typeArray===Uint32Array?g.UNSIGNED_INT:g.UNSIGNED_SHORT,d.wireframe?(E(d.wireframeLinewidth),a&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),g.drawElements(g.LINES,e.__webglLineCount,l,0)):(a&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),g.drawElements(g.TRIANGLES,e.__webglFaceCount,l,0)),A.info.render.calls++,A.info.render.vertices+=e.__webglFaceCount,A.info.render.faces+=e.__webglFaceCount/3):l instanceof THREE.Line?(l=
l.mode===THREE.LineStrip?g.LINE_STRIP:g.LINES,E(d.linewidth),g.drawArrays(l,0,e.__webglLineCount),A.info.render.calls++):l instanceof THREE.PointCloud&&(g.drawArrays(g.POINTS,0,e.__webglParticleCount),A.info.render.calls++,A.info.render.points+=e.__webglParticleCount)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e=a.fog;ec=Ma=-1;fc=null;Ob=!0;!0===a.autoUpdate&&a.updateMatrixWorld();
void 0===b.parent&&b.updateMatrixWorld();a.traverse(function(a){a instanceof THREE.SkinnedMesh&&a.skeleton.update()});b.matrixWorldInverse.getInverse(b.matrixWorld);xc.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);Bc.setFromMatrix(xc);Na.length=0;Wb.length=0;Nb.length=0;zc.length=0;Ac.length=0;p(a,a);!0===A.sortObjects&&(Wb.sort(m),Nb.sort(n));kd.render(a,b);A.info.render.calls=0;A.info.render.vertices=0;A.info.render.faces=0;A.info.render.points=0;this.setRenderTarget(c);(this.autoClear||
d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);d=0;for(var f=Za.length;d<f;d++){var g=Za[d],h=g.object;h.visible&&(u(h,b),s(g))}a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),B(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),l(Wb,b,Na,e,!0,d),l(Nb,b,Na,e,!0,d),w(Za,"",b,Na,e,!1,d)):(d=null,this.setBlending(THREE.NoBlending),l(Wb,b,
Na,e,!1,d),w(Za,"opaque",b,Na,e,!1,d),l(Nb,b,Na,e,!0,d),w(Za,"transparent",b,Na,e,!0,d));ld.render(a,b);md.render(a,b,Vc,Wc);c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&K(c);this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=R(a,b,c,d,e);Ma=-1;A.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,g,Bc):e.render(function(a){A.renderBufferImmediate(a,f,d)})};var Fb={},Kc=0;this.setFaceCulling=
function(a,b){a===THREE.CullFaceNone?g.disable(g.CULL_FACE):(b===THREE.FrontFaceDirectionCW?g.frontFace(g.CW):g.frontFace(g.CCW),a===THREE.CullFaceBack?g.cullFace(g.BACK):a===THREE.CullFaceFront?g.cullFace(g.FRONT):g.cullFace(g.FRONT_AND_BACK),g.enable(g.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;Cb!==b&&(b?g.disable(g.CULL_FACE):g.enable(g.CULL_FACE),Cb=b);Xb!==a&&(a?g.frontFace(g.CW):g.frontFace(g.CCW),Xb=a)};this.setDepthTest=function(a){sc!==
a&&(a?g.enable(g.DEPTH_TEST):g.disable(g.DEPTH_TEST),sc=a)};this.setDepthWrite=function(a){tc!==a&&(g.depthMask(a),tc=a)};this.setBlending=function(a,b,c,d){a!==lc&&(a===THREE.NoBlending?g.disable(g.BLEND):a===THREE.AdditiveBlending?(g.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),g.blendFunc(g.SRC_ALPHA,g.ONE)):a===THREE.SubtractiveBlending?(g.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),g.blendFunc(g.ZERO,g.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(g.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),
g.blendFunc(g.ZERO,g.SRC_COLOR)):a===THREE.CustomBlending?g.enable(g.BLEND):(g.enable(g.BLEND),g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD),g.blendFuncSeparate(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA,g.ONE,g.ONE_MINUS_SRC_ALPHA)),lc=a);if(a===THREE.CustomBlending){if(b!==mc&&(g.blendEquation(T(b)),mc=b),c!==rb||d!==nc)g.blendFunc(T(c),T(d)),rb=c,nc=d}else nc=rb=mc=null};this.uploadTexture=function(a){void 0===a.__webglInit&&(a.__webglInit=!0,a.addEventListener("dispose",gc),a.__webglTexture=g.createTexture(),
A.info.memory.textures++);g.bindTexture(g.TEXTURE_2D,a.__webglTexture);g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,a.flipY);g.pixelStorei(g.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);g.pixelStorei(g.UNPACK_ALIGNMENT,a.unpackAlignment);a.image=C(a.image,ed);var b=a.image,c=THREE.Math.isPowerOfTwo(b.width)&&THREE.Math.isPowerOfTwo(b.height),d=T(a.format),e=T(a.type);D(g.TEXTURE_2D,a,c);var f=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<f.length&&c){for(var h=0,k=f.length;h<k;h++)b=f[h],g.texImage2D(g.TEXTURE_2D,
h,d,b.width,b.height,0,d,e,b.data);a.generateMipmaps=!1}else g.texImage2D(g.TEXTURE_2D,0,d,b.width,b.height,0,d,e,b.data);else if(a instanceof THREE.CompressedTexture)for(h=0,k=f.length;h<k;h++)b=f[h],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?-1<Oc().indexOf(d)?g.compressedTexImage2D(g.TEXTURE_2D,h,d,b.width,b.height,0,b.data):console.warn("Attempt to load unsupported compressed texture format"):g.texImage2D(g.TEXTURE_2D,h,d,b.width,b.height,0,d,e,b.data);else if(0<f.length&&c){h=0;
for(k=f.length;h<k;h++)b=f[h],g.texImage2D(g.TEXTURE_2D,h,d,d,e,b);a.generateMipmaps=!1}else g.texImage2D(g.TEXTURE_2D,0,d,d,e,a.image);a.generateMipmaps&&c&&g.generateMipmap(g.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()};this.setTexture=function(a,b){g.activeTexture(g.TEXTURE0+b);a.needsUpdate?A.uploadTexture(a):g.bindTexture(g.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&void 0===a.__webglFramebuffer){void 0===a.depthBuffer&&
(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",$c);a.__webglTexture=g.createTexture();A.info.memory.textures++;var c=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),d=T(a.format),e=T(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];g.bindTexture(g.TEXTURE_CUBE_MAP,a.__webglTexture);D(g.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=g.createFramebuffer();a.__webglRenderbuffer[f]=g.createRenderbuffer();
g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var h=a,k=g.TEXTURE_CUBE_MAP_POSITIVE_X+f;g.bindFramebuffer(g.FRAMEBUFFER,a.__webglFramebuffer[f]);g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,k,h.__webglTexture,0);H(a.__webglRenderbuffer[f],a)}c&&g.generateMipmap(g.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=g.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:g.createRenderbuffer(),g.bindTexture(g.TEXTURE_2D,a.__webglTexture),
D(g.TEXTURE_2D,a,c),g.texImage2D(g.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=g.TEXTURE_2D,g.bindFramebuffer(g.FRAMEBUFFER,a.__webglFramebuffer),g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_ATTACHMENT,g.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_STENCIL_ATTACHMENT,g.RENDERBUFFER,a.__webglRenderbuffer):
H(a.__webglRenderbuffer,a),c&&g.generateMipmap(g.TEXTURE_2D);b?g.bindTexture(g.TEXTURE_CUBE_MAP,null):g.bindTexture(g.TEXTURE_2D,null);g.bindRenderbuffer(g.RENDERBUFFER,null);g.bindFramebuffer(g.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=oc,a=pc,d=fb,e=gb);b!==Uc&&(g.bindFramebuffer(g.FRAMEBUFFER,b),g.viewport(d,e,c,a),Uc=b);Vc=c;Wc=a};this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};
this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;
a.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);
THREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case "OES_texture_float":d=a.getExtension("OES_texture_float");break;case "OES_texture_float_linear":d=a.getExtension("OES_texture_float_linear");break;case "OES_standard_derivatives":d=a.getExtension("OES_standard_derivatives");break;case "EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
break;case "WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case "WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case "OES_element_index_uint":d=a.getExtension("OES_element_index_uint");break;case "EXT_blend_minmax":d=a.getExtension("EXT_blend_minmax");break;
case "EXT_frag_depth":d=a.getExtension("EXT_frag_depth")}null===d&&console.log("THREE.WebGLRenderer: "+c+" extension not supported.");return b[c]=d}};
THREE.WebGLProgram=function(){var a=0;return function(b,c,d,e){var f=b.context,h=d.defines,k=d.__webglShader.uniforms,m=d.attributes,n=d.__webglShader.vertexShader,q=d.__webglShader.fragmentShader,p=d.index0AttributeName;void 0===p&&!0===e.morphTargets&&(p="position");var l="SHADOWMAP_TYPE_BASIC";e.shadowMapType===THREE.PCFShadowMap?l="SHADOWMAP_TYPE_PCF":e.shadowMapType===THREE.PCFSoftShadowMap&&(l="SHADOWMAP_TYPE_PCF_SOFT");var w,s;w=[];for(var t in h)s=h[t],!1!==s&&(s="#define "+t+" "+s,w.push(s));
w=w.join("\n");h=f.createProgram();d instanceof THREE.RawShaderMaterial?b=d="":(d=["precision "+e.precision+" float;","precision "+e.precision+" int;",w,e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,"#define MAX_BONES "+
e.maxBones,e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals?"#define USE_MORPHNORMALS":"",e.wrapAround?"#define WRAP_AROUND":
"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),
b=["precision "+e.precision+" float;","precision "+e.precision+" int;",e.bumpMap||e.normalMap?"#extension GL_OES_standard_derivatives : enable":"",w,"#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,e.alphaTest?"#define ALPHATEST "+e.alphaTest:"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"",e.useFog&&e.fog?"#define USE_FOG":
"",e.useFog&&e.fogExp?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.metal?"#define METAL":"",e.wrapAround?"#define WRAP_AROUND":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":
"",e.shadowMapEnabled?"#define "+l:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));n=new THREE.WebGLShader(f,f.VERTEX_SHADER,d+n);q=new THREE.WebGLShader(f,f.FRAGMENT_SHADER,b+q);f.attachShader(h,n);f.attachShader(h,q);void 0!==p&&f.bindAttribLocation(h,0,p);f.linkProgram(h);!1===f.getProgramParameter(h,f.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),
console.error("gl.VALIDATE_STATUS",f.getProgramParameter(h,f.VALIDATE_STATUS)),console.error("gl.getError()",f.getError()));""!==f.getProgramInfoLog(h)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f.getProgramInfoLog(h));f.deleteShader(n);f.deleteShader(q);p="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");e.useVertexTexture?(p.push("boneTexture"),p.push("boneTextureWidth"),p.push("boneTextureHeight")):
p.push("boneGlobalMatrices");e.logarithmicDepthBuffer&&p.push("logDepthBufFC");for(var v in k)p.push(v);k=p;v={};p=0;for(b=k.length;p<b;p++)l=k[p],v[l]=f.getUniformLocation(h,l);this.uniforms=v;p="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(k=0;k<e.maxMorphTargets;k++)p.push("morphTarget"+k);for(k=0;k<e.maxMorphNormals;k++)p.push("morphNormal"+k);for(var z in m)p.push(z);e=p;m={};z=0;for(k=e.length;z<k;z++)v=e[z],m[v]=f.getAttribLocation(h,v);this.attributes=
m;this.attributesKeys=Object.keys(this.attributes);this.id=a++;this.code=c;this.usedTimes=1;this.program=h;this.vertexShader=n;this.fragmentShader=q;return this}}();
THREE.WebGLShader=function(){var a=function(a){a=a.split("\n");for(var c=0;c<a.length;c++)a[c]=c+1+": "+a[c];return a.join("\n")};return function(b,c,d){c=b.createShader(c);b.shaderSource(c,d);b.compileShader(c);!1===b.getShaderParameter(c,b.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");""!==b.getShaderInfoLog(c)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",b.getShaderInfoLog(c)),console.warn(a(d)));return c}}();
THREE.LensFlarePlugin=function(a,b){var c,d,e,f,h,k,m,n,q,p,l=a.context,w,s,t,v,z,L;this.render=function(R,r,W,u){if(0!==b.length){R=new THREE.Vector3;var M=u/W,I=.5*W,E=.5*u,B=16/u,D=new THREE.Vector2(B*M,B),C=new THREE.Vector3(1,1,0),H=new THREE.Vector2(1,1);if(void 0===t){var B=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),K=new Uint16Array([0,1,2,0,2,3]);w=l.createBuffer();s=l.createBuffer();l.bindBuffer(l.ARRAY_BUFFER,w);l.bufferData(l.ARRAY_BUFFER,B,l.STATIC_DRAW);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,
s);l.bufferData(l.ELEMENT_ARRAY_BUFFER,K,l.STATIC_DRAW);z=l.createTexture();L=l.createTexture();l.bindTexture(l.TEXTURE_2D,z);l.texImage2D(l.TEXTURE_2D,0,l.RGB,16,16,0,l.RGB,l.UNSIGNED_BYTE,null);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST);l.bindTexture(l.TEXTURE_2D,L);l.texImage2D(l.TEXTURE_2D,0,
l.RGBA,16,16,0,l.RGBA,l.UNSIGNED_BYTE,null);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST);l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST);var B=(v=0<l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
K=l.createProgram(),O=l.createShader(l.FRAGMENT_SHADER),T=l.createShader(l.VERTEX_SHADER),S="precision "+a.getPrecision()+" float;\n";l.shaderSource(O,S+B.fragmentShader);l.shaderSource(T,S+B.vertexShader);l.compileShader(O);l.compileShader(T);l.attachShader(K,O);l.attachShader(K,T);l.linkProgram(K);t=K;q=l.getAttribLocation(t,"position");p=l.getAttribLocation(t,"uv");c=l.getUniformLocation(t,"renderType");d=l.getUniformLocation(t,"map");e=l.getUniformLocation(t,"occlusionMap");f=l.getUniformLocation(t,
"opacity");h=l.getUniformLocation(t,"color");k=l.getUniformLocation(t,"scale");m=l.getUniformLocation(t,"rotation");n=l.getUniformLocation(t,"screenPosition")}l.useProgram(t);l.enableVertexAttribArray(q);l.enableVertexAttribArray(p);l.uniform1i(e,0);l.uniform1i(d,1);l.bindBuffer(l.ARRAY_BUFFER,w);l.vertexAttribPointer(q,2,l.FLOAT,!1,16,0);l.vertexAttribPointer(p,2,l.FLOAT,!1,16,8);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,s);l.disable(l.CULL_FACE);l.depthMask(!1);K=0;for(O=b.length;K<O;K++)if(B=16/u,D.set(B*
M,B),T=b[K],R.set(T.matrixWorld.elements[12],T.matrixWorld.elements[13],T.matrixWorld.elements[14]),R.applyMatrix4(r.matrixWorldInverse),R.applyProjection(r.projectionMatrix),C.copy(R),H.x=C.x*I+I,H.y=C.y*E+E,v||0<H.x&&H.x<W&&0<H.y&&H.y<u){l.activeTexture(l.TEXTURE1);l.bindTexture(l.TEXTURE_2D,z);l.copyTexImage2D(l.TEXTURE_2D,0,l.RGB,H.x-8,H.y-8,16,16,0);l.uniform1i(c,0);l.uniform2f(k,D.x,D.y);l.uniform3f(n,C.x,C.y,C.z);l.disable(l.BLEND);l.enable(l.DEPTH_TEST);l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,
0);l.activeTexture(l.TEXTURE0);l.bindTexture(l.TEXTURE_2D,L);l.copyTexImage2D(l.TEXTURE_2D,0,l.RGBA,H.x-8,H.y-8,16,16,0);l.uniform1i(c,1);l.disable(l.DEPTH_TEST);l.activeTexture(l.TEXTURE1);l.bindTexture(l.TEXTURE_2D,z);l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0);T.positionScreen.copy(C);T.customUpdateCallback?T.customUpdateCallback(T):T.updateLensFlares();l.uniform1i(c,2);l.enable(l.BLEND);for(var S=0,na=T.lensFlares.length;S<na;S++){var da=T.lensFlares[S];.001<da.opacity&&.001<da.scale&&(C.x=
da.x,C.y=da.y,C.z=da.z,B=da.size*da.scale/u,D.x=B*M,D.y=B,l.uniform3f(n,C.x,C.y,C.z),l.uniform2f(k,D.x,D.y),l.uniform1f(m,da.rotation),l.uniform1f(f,da.opacity),l.uniform3f(h,da.color.r,da.color.g,da.color.b),a.setBlending(da.blending,da.blendEquation,da.blendSrc,da.blendDst),a.setTexture(da.texture,1),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0))}}l.enable(l.CULL_FACE);l.enable(l.DEPTH_TEST);l.depthMask(!0);a.resetGLState()}}};
THREE.ShadowMapPlugin=function(a,b,c,d){function e(a,b,d){if(b.visible){var f=c[b.id];if(f&&b.castShadow&&(!1===b.frustumCulled||!0===q.intersectsObject(b)))for(var h=0,k=f.length;h<k;h++){var l=f[h];b._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,b.matrixWorld);t.push(l)}h=0;for(k=b.children.length;h<k;h++)e(a,b.children[h],d)}}var f=a.context,h,k,m,n,q=new THREE.Frustum,p=new THREE.Matrix4,l=new THREE.Vector3,w=new THREE.Vector3,s=new THREE.Vector3,t=[],v=THREE.ShaderLib.depthRGBA,z=THREE.UniformsUtils.clone(v.uniforms);
h=new THREE.ShaderMaterial({uniforms:z,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader});k=new THREE.ShaderMaterial({uniforms:z,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,morphTargets:!0});m=new THREE.ShaderMaterial({uniforms:z,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,skinning:!0});n=new THREE.ShaderMaterial({uniforms:z,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,morphTargets:!0,skinning:!0});h._shadowPass=!0;k._shadowPass=!0;m._shadowPass=
!0;n._shadowPass=!0;this.render=function(c,v){if(!1!==a.shadowMapEnabled){var r,z,u,M,I,E,B,D,C=[];M=0;f.clearColor(1,1,1,1);f.disable(f.BLEND);f.enable(f.CULL_FACE);f.frontFace(f.CCW);a.shadowMapCullFace===THREE.CullFaceFront?f.cullFace(f.FRONT):f.cullFace(f.BACK);a.setDepthTest(!0);r=0;for(z=b.length;r<z;r++)if(u=b[r],u.castShadow)if(u instanceof THREE.DirectionalLight&&u.shadowCascade)for(I=0;I<u.shadowCascadeCount;I++){var H;if(u.shadowCascadeArray[I])H=u.shadowCascadeArray[I];else{B=u;var K=
I;H=new THREE.DirectionalLight;H.isVirtual=!0;H.onlyShadow=!0;H.castShadow=!0;H.shadowCameraNear=B.shadowCameraNear;H.shadowCameraFar=B.shadowCameraFar;H.shadowCameraLeft=B.shadowCameraLeft;H.shadowCameraRight=B.shadowCameraRight;H.shadowCameraBottom=B.shadowCameraBottom;H.shadowCameraTop=B.shadowCameraTop;H.shadowCameraVisible=B.shadowCameraVisible;H.shadowDarkness=B.shadowDarkness;H.shadowBias=B.shadowCascadeBias[K];H.shadowMapWidth=B.shadowCascadeWidth[K];H.shadowMapHeight=B.shadowCascadeHeight[K];
H.pointsWorld=[];H.pointsFrustum=[];D=H.pointsWorld;E=H.pointsFrustum;for(var O=0;8>O;O++)D[O]=new THREE.Vector3,E[O]=new THREE.Vector3;D=B.shadowCascadeNearZ[K];B=B.shadowCascadeFarZ[K];E[0].set(-1,-1,D);E[1].set(1,-1,D);E[2].set(-1,1,D);E[3].set(1,1,D);E[4].set(-1,-1,B);E[5].set(1,-1,B);E[6].set(-1,1,B);E[7].set(1,1,B);H.originalCamera=v;E=new THREE.Gyroscope;E.position.copy(u.shadowCascadeOffset);E.add(H);E.add(H.target);v.add(E);u.shadowCascadeArray[I]=H;console.log("Created virtualLight",H)}K=
u;D=I;B=K.shadowCascadeArray[D];B.position.copy(K.position);B.target.position.copy(K.target.position);B.lookAt(B.target);B.shadowCameraVisible=K.shadowCameraVisible;B.shadowDarkness=K.shadowDarkness;B.shadowBias=K.shadowCascadeBias[D];E=K.shadowCascadeNearZ[D];K=K.shadowCascadeFarZ[D];B=B.pointsFrustum;B[0].z=E;B[1].z=E;B[2].z=E;B[3].z=E;B[4].z=K;B[5].z=K;B[6].z=K;B[7].z=K;C[M]=H;M++}else C[M]=u,M++;r=0;for(z=C.length;r<z;r++){u=C[r];u.shadowMap||(I=THREE.LinearFilter,a.shadowMapType===THREE.PCFSoftShadowMap&&
(I=THREE.NearestFilter),u.shadowMap=new THREE.WebGLRenderTarget(u.shadowMapWidth,u.shadowMapHeight,{minFilter:I,magFilter:I,format:THREE.RGBAFormat}),u.shadowMapSize=new THREE.Vector2(u.shadowMapWidth,u.shadowMapHeight),u.shadowMatrix=new THREE.Matrix4);if(!u.shadowCamera){if(u instanceof THREE.SpotLight)u.shadowCamera=new THREE.PerspectiveCamera(u.shadowCameraFov,u.shadowMapWidth/u.shadowMapHeight,u.shadowCameraNear,u.shadowCameraFar);else if(u instanceof THREE.DirectionalLight)u.shadowCamera=new THREE.OrthographicCamera(u.shadowCameraLeft,
u.shadowCameraRight,u.shadowCameraTop,u.shadowCameraBottom,u.shadowCameraNear,u.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}c.add(u.shadowCamera);!0===c.autoUpdate&&c.updateMatrixWorld()}u.shadowCameraVisible&&!u.cameraHelper&&(u.cameraHelper=new THREE.CameraHelper(u.shadowCamera),c.add(u.cameraHelper));if(u.isVirtual&&H.originalCamera==v){I=v;M=u.shadowCamera;E=u.pointsFrustum;B=u.pointsWorld;l.set(Infinity,Infinity,Infinity);w.set(-Infinity,-Infinity,-Infinity);
for(K=0;8>K;K++)D=B[K],D.copy(E[K]),D.unproject(I),D.applyMatrix4(M.matrixWorldInverse),D.x<l.x&&(l.x=D.x),D.x>w.x&&(w.x=D.x),D.y<l.y&&(l.y=D.y),D.y>w.y&&(w.y=D.y),D.z<l.z&&(l.z=D.z),D.z>w.z&&(w.z=D.z);M.left=l.x;M.right=w.x;M.top=w.y;M.bottom=l.y;M.updateProjectionMatrix()}M=u.shadowMap;E=u.shadowMatrix;I=u.shadowCamera;I.position.setFromMatrixPosition(u.matrixWorld);s.setFromMatrixPosition(u.target.matrixWorld);I.lookAt(s);I.updateMatrixWorld();I.matrixWorldInverse.getInverse(I.matrixWorld);u.cameraHelper&&
(u.cameraHelper.visible=u.shadowCameraVisible);u.shadowCameraVisible&&u.cameraHelper.update();E.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);E.multiply(I.projectionMatrix);E.multiply(I.matrixWorldInverse);p.multiplyMatrices(I.projectionMatrix,I.matrixWorldInverse);q.setFromMatrix(p);a.setRenderTarget(M);a.clear();t.length=0;e(c,c,I);u=0;for(M=t.length;u<M;u++)B=t[u],E=B.object,B=B.buffer,K=E.material instanceof THREE.MeshFaceMaterial?E.material.materials[0]:E.material,D=void 0!==E.geometry.morphTargets&&
0<E.geometry.morphTargets.length&&K.morphTargets,O=E instanceof THREE.SkinnedMesh&&K.skinning,D=E.customDepthMaterial?E.customDepthMaterial:O?D?n:m:D?k:h,a.setMaterialFaces(K),B instanceof THREE.BufferGeometry?a.renderBufferDirect(I,b,null,D,B,E):a.renderBuffer(I,b,null,D,B,E);u=0;for(M=d.length;u<M;u++)B=d[u],E=B.object,E.visible&&E.castShadow&&(E._modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,E.matrixWorld),a.renderImmediateObject(I,b,null,h,E))}r=a.getClearColor();z=a.getClearAlpha();f.clearColor(r.r,
r.g,r.b,z);f.enable(f.BLEND);a.shadowMapCullFace===THREE.CullFaceFront&&f.cullFace(f.BACK);a.resetGLState()}}};
THREE.SpritePlugin=function(a,b){var c,d,e,f,h,k,m,n,q,p,l,w,s,t,v,z,L;function R(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var r=a.context,W,u,M,I;this.render=function(E,B){if(0!==b.length){if(void 0===M){var D=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),C=new Uint16Array([0,1,2,0,2,3]);W=r.createBuffer();u=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,W);r.bufferData(r.ARRAY_BUFFER,D,r.STATIC_DRAW);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,u);r.bufferData(r.ELEMENT_ARRAY_BUFFER,C,r.STATIC_DRAW);
var D=r.createProgram(),C=r.createShader(r.VERTEX_SHADER),H=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(C,["precision "+a.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
r.shaderSource(H,["precision "+a.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
r.compileShader(C);r.compileShader(H);r.attachShader(D,C);r.attachShader(D,H);r.linkProgram(D);M=D;z=r.getAttribLocation(M,"position");L=r.getAttribLocation(M,"uv");c=r.getUniformLocation(M,"uvOffset");d=r.getUniformLocation(M,"uvScale");e=r.getUniformLocation(M,"rotation");f=r.getUniformLocation(M,"scale");h=r.getUniformLocation(M,"color");k=r.getUniformLocation(M,"map");m=r.getUniformLocation(M,"opacity");n=r.getUniformLocation(M,"modelViewMatrix");q=r.getUniformLocation(M,"projectionMatrix");p=
r.getUniformLocation(M,"fogType");l=r.getUniformLocation(M,"fogDensity");w=r.getUniformLocation(M,"fogNear");s=r.getUniformLocation(M,"fogFar");t=r.getUniformLocation(M,"fogColor");v=r.getUniformLocation(M,"alphaTest");D=document.createElement("canvas");D.width=8;D.height=8;C=D.getContext("2d");C.fillStyle="white";C.fillRect(0,0,8,8);I=new THREE.Texture(D);I.needsUpdate=!0}r.useProgram(M);r.enableVertexAttribArray(z);r.enableVertexAttribArray(L);r.disable(r.CULL_FACE);r.enable(r.BLEND);r.bindBuffer(r.ARRAY_BUFFER,
W);r.vertexAttribPointer(z,2,r.FLOAT,!1,16,0);r.vertexAttribPointer(L,2,r.FLOAT,!1,16,8);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,u);r.uniformMatrix4fv(q,!1,B.projectionMatrix.elements);r.activeTexture(r.TEXTURE0);r.uniform1i(k,0);C=D=0;(H=E.fog)?(r.uniform3f(t,H.color.r,H.color.g,H.color.b),H instanceof THREE.Fog?(r.uniform1f(w,H.near),r.uniform1f(s,H.far),r.uniform1i(p,1),C=D=1):H instanceof THREE.FogExp2&&(r.uniform1f(l,H.density),r.uniform1i(p,2),C=D=2)):(r.uniform1i(p,0),C=D=0);for(var H=0,K=b.length;H<
K;H++){var O=b[H];O._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,O.matrixWorld);O.z=null===O.renderDepth?-O._modelViewMatrix.elements[14]:O.renderDepth}b.sort(R);for(var T=[],H=0,K=b.length;H<K;H++){var O=b[H],S=O.material;r.uniform1f(v,S.alphaTest);r.uniformMatrix4fv(n,!1,O._modelViewMatrix.elements);T[0]=O.scale.x;T[1]=O.scale.y;O=0;E.fog&&S.fog&&(O=C);D!==O&&(r.uniform1i(p,O),D=O);null!==S.map?(r.uniform2f(c,S.map.offset.x,S.map.offset.y),r.uniform2f(d,S.map.repeat.x,S.map.repeat.y)):
(r.uniform2f(c,0,0),r.uniform2f(d,1,1));r.uniform1f(m,S.opacity);r.uniform3f(h,S.color.r,S.color.g,S.color.b);r.uniform1f(e,S.rotation);r.uniform2fv(f,T);a.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst);a.setDepthTest(S.depthTest);a.setDepthWrite(S.depthWrite);S.map&&S.map.image&&S.map.image.width?a.setTexture(S.map,0):a.setTexture(I,0);r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0)}r.enable(r.CULL_FACE);a.resetGLState()}}};
THREE.PlaneGeometry=function(a,b,c,d){console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.");THREE.Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,f=b/2;c=c||1;d=d||1;var h=c+1,k=d+1,m=a/c,n=b/d;b=new Float32Array(h*k*3);a=new Float32Array(h*k*3);for(var q=new Float32Array(h*k*2),p=0,l=0,w=0;w<k;w++)for(var s=w*n-f,t=0;t<h;t++)b[p]=t*m-e,b[p+1]=-s,a[p+2]=1,q[l]=t/c,q[l+1]=1-w/d,p+=3,l+=2;p=0;e=new (65535<b.length/3?Uint32Array:Uint16Array)(c*d*6);for(w=0;w<d;w++)for(t=
0;t<c;t++)f=t+h*(w+1),k=t+1+h*(w+1),m=t+1+h*w,e[p]=t+h*w,e[p+1]=f,e[p+2]=m,e[p+3]=f,e[p+4]=k,e[p+5]=m,p+=6;this.addAttribute("index",new THREE.BufferAttribute(e,1));this.addAttribute("position",new THREE.BufferAttribute(b,3));this.addAttribute("normal",new THREE.BufferAttribute(a,3));this.addAttribute("uv",new THREE.BufferAttribute(q,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.Curve=function(){};
THREE.Curve.prototype.getPoint=function(a){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};
THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var h=0,k=e-1,m;h<=k;)if(d=Math.floor(h+(k-h)/2),m=c[d]-f,0>m)h=d+1;else if(0<m)k=d-1;else{k=d;break}d=k;if(c[d]==f)return d/(e-1);h=c[d];return c=(d+(f-h)/(c[d+1]-h))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-0;var c=Math.floor(a);a-=c;var c=c+(0<c?0:(Math.floor(Math.abs(c)/b.length)+1)*b.length),d=b[(c-1)%b.length],e=b[c%b.length],f=b[(c+1)%b.length],b=b[(c+2)%b.length],c=new THREE.Vector3;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,f.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,f.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,f.z,b.z,a);return c});
THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);
